package ActorLanguage.actions;

/*Generated by MPS */

import jetbrains.mps.actions.descriptor.BaseActionAspectDescriptor;
import jetbrains.mps.openapi.actions.descriptor.ActionAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.actions.descriptor.NodeFactory;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;

public class ActionAspectDescriptorImpl extends BaseActionAspectDescriptor implements ActionAspectDescriptor {
  private static final String LANGUAGE_FQ_NAME = "ActorLanguage";

  @Override
  public Collection<NodeFactory> getFactories(SAbstractConcept concept) {
    if (LANGUAGE_FQ_NAME.equals(concept.getLanguage().getQualifiedName())) {
      switch (concept.getName()) {
        case "CreateActor":
          return Collections.<NodeFactory>singletonList(new ActorFactory.NodeFactory_7694881003795581833());
        case "CreateBehavior":
          return Collections.<NodeFactory>singletonList(new CreateBehaviorFactory.NodeFactory_5165113600332958188());
        case "Receptionist":
          return Collections.<NodeFactory>singletonList(new ReceptionistFactory.NodeFactory_6739934483259132151());
        case "SendMessageToNeighbors":
          return Collections.<NodeFactory>singletonList(new SendMessageToNeighborsFactory.NodeFactory_8622806035647258844());
        case "SwitchPolicy":
          return Collections.<NodeFactory>singletonList(new SwitchPolicyFactory.NodeFactory_1411682935496708278());
        default:
      }
    }
    return Collections.<NodeFactory>emptyList();
  }

}
