package QueryLanguage.generator.templates;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.Generated;
import jetbrains.mps.generator.impl.query.QueryProviderBase;
import jetbrains.mps.generator.template.BaseMappingRuleContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import java.util.Objects;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.Sequence;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.generator.template.ReferenceMacroContext;
import jetbrains.mps.baseLanguage.closures.runtime.Wrappers;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import QueryLanguage.behavior.Script__BehaviorDescriptor;
import jetbrains.mps.smodel.SNodeMatcher;
import jetbrains.mps.generator.template.IfMacroContext;
import jetbrains.mps.internal.collections.runtime.MapSequence;
import java.util.Map;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import java.util.ArrayList;
import jetbrains.mps.generator.template.MappingScriptContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import QueryLanguage.behavior.MultipleCondition__BehaviorDescriptor;
import jetbrains.mps.generator.template.TemplateVarContext;
import java.util.HashMap;
import jetbrains.mps.generator.template.TemplateQueryContext;
import jetbrains.mps.generator.impl.query.ReductionRuleCondition;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.generator.impl.query.QueryKey;
import jetbrains.mps.generator.template.ReductionRuleQueryContext;
import jetbrains.mps.generator.impl.GenerationFailureException;
import jetbrains.mps.generator.impl.query.ScriptCodeBlock;
import jetbrains.mps.generator.impl.query.SourceNodesQuery;
import java.util.Collection;
import jetbrains.mps.util.IterableUtil;
import jetbrains.mps.generator.impl.query.PropertyValueQuery;
import org.jetbrains.mps.openapi.language.SProperty;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.generator.impl.query.IfMacroCondition;
import jetbrains.mps.generator.impl.query.ReferenceTargetQuery;
import jetbrains.mps.generator.impl.query.VariableValueQuery;
import jetbrains.mps.generator.impl.query.LabelInputQuery;
import jetbrains.mps.generator.template.LabelKeyQueryContext;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.lang.smodel.EnumerationLiteralsIndex;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import org.jetbrains.mps.openapi.language.SConcept;

@Generated
public class QueriesGenerated extends QueryProviderBase {
  public QueriesGenerated() {
    super(1);
  }
  public static boolean rule_Condition_5_0(final BaseMappingRuleContext _context) {
    return (SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0), LINKS.condition$d94q) != null);
  }
  public static boolean rule_Condition_5_1(final BaseMappingRuleContext _context) {
    return !(Objects.equals(SLinkOperations.getChildren(_context.getNode(), LINKS.cols$kMcM).get(0).getConcept(), CONCEPTS.AllColumns$eP));
  }
  public static boolean rule_Condition_5_2(final BaseMappingRuleContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.groupBy$vhgB) != null);
  }
  public static boolean rule_Condition_5_3(final BaseMappingRuleContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.orderBy$K96v) != null);
  }
  public static boolean rule_Condition_5_4(final BaseMappingRuleContext _context) {
    return (ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.cols$kMcM)).findFirst((it) -> (SLinkOperations.getTarget(it, LINKS.aggregationFunction$8ryB) != null)) != null);
  }
  public static boolean rule_Condition_7_0(final BaseMappingRuleContext _context) {
    return !(Objects.equals(SNodeOperations.getConcept(ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.cols$kMcM)).getElement(0)), CONCEPTS.AllColumns$eP));
  }
  public static boolean rule_Condition_7_1(final BaseMappingRuleContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.groupBy$vhgB) != null);
  }
  public static boolean rule_Condition_7_2(final BaseMappingRuleContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.orderBy$K96v) != null);
  }
  public static boolean rule_Condition_7_3(final BaseMappingRuleContext _context) {
    return (ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.cols$kMcM)).findFirst((it) -> (SLinkOperations.getTarget(it, LINKS.aggregationFunction$8ryB) != null)) != null);
  }
  public static boolean rule_Condition_8_0(final BaseMappingRuleContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.groupBy$vhgB) != null);
  }
  public static boolean rule_Condition_8_1(final BaseMappingRuleContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.orderBy$K96v) != null);
  }
  public static boolean rule_Condition_8_2(final BaseMappingRuleContext _context) {
    return (ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.cols$kMcM)).findFirst((it) -> (SLinkOperations.getTarget(it, LINKS.aggregationFunction$8ryB) != null)) != null);
  }
  public static boolean rule_Condition_9_0(final BaseMappingRuleContext _context) {
    return (ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.cols$kMcM)).findFirst((it) -> (SLinkOperations.getTarget(it, LINKS.aggregationFunction$8ryB) != null)) != null);
  }
  public static boolean rule_Condition_9_1(final BaseMappingRuleContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.orderBy$K96v) != null);
  }
  public static boolean rule_Condition_10_0(final BaseMappingRuleContext _context) {
    return (SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0), LINKS.condition$d94q) != null);
  }
  public static boolean rule_Condition_10_1(final BaseMappingRuleContext _context) {
    return (SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0), LINKS.condition$d94q) == null);
  }
  public static boolean rule_Condition_11_0(final BaseMappingRuleContext _context) {
    return !(Objects.equals(SNodeOperations.getConcept(ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.cols$kMcM)).getElement(0)), CONCEPTS.AllColumns$eP));
  }
  public static boolean rule_Condition_11_1(final BaseMappingRuleContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.groupBy$vhgB) != null);
  }
  public static boolean rule_Condition_11_2(final BaseMappingRuleContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.orderBy$K96v) != null);
  }
  public static boolean rule_Condition_11_3(final BaseMappingRuleContext _context) {
    return (ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.cols$kMcM)).findFirst((it) -> (SLinkOperations.getTarget(it, LINKS.aggregationFunction$8ryB) != null)) != null);
  }
  public static boolean rule_Condition_13_0(final BaseMappingRuleContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0) == null);
  }
  public static boolean rule_Condition_13_1(final BaseMappingRuleContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0) != null);
  }
  public static boolean rule_Condition_17_0(final BaseMappingRuleContext _context) {
    return (SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0), LINKS.condition$d94q) != null);
  }
  public static boolean rule_Condition_17_1(final BaseMappingRuleContext _context) {
    return !(Objects.equals(SLinkOperations.getChildren(_context.getNode(), LINKS.cols$kMcM).get(0).getConcept(), CONCEPTS.AllColumns$eP));
  }
  public static boolean rule_Condition_17_2(final BaseMappingRuleContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.groupBy$vhgB) != null);
  }
  public static boolean rule_Condition_17_3(final BaseMappingRuleContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.orderBy$K96v) != null);
  }
  public static boolean rule_Condition_17_4(final BaseMappingRuleContext _context) {
    return (ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.cols$kMcM)).findFirst((it) -> (SLinkOperations.getTarget(it, LINKS.aggregationFunction$8ryB) != null)) != null);
  }
  public static boolean rule_Condition_18_0(final BaseMappingRuleContext _context) {
    return (SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0), LINKS.condition$d94q) != null);
  }
  public static boolean rule_Condition_18_1(final BaseMappingRuleContext _context) {
    return (SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0), LINKS.condition$d94q) == null);
  }
  public static boolean rule_Condition_22_0(final BaseMappingRuleContext _context) {
    SNode condition = (SNode) _context.getSessionObject(_context.getNode());
    return (condition != null);
  }
  public static boolean rule_Condition_22_1(final BaseMappingRuleContext _context) {
    SNode condition = (SNode) _context.getSessionObject(_context.getNode());
    return (condition == null);
  }
  public static boolean rule_Condition_23_0(final BaseMappingRuleContext _context) {
    SNode condition = (SNode) _context.getSessionObject(_context.getNode());
    return (condition != null);
  }
  public static boolean rule_Condition_23_1(final BaseMappingRuleContext _context) {
    SNode condition = (SNode) _context.getSessionObject(_context.getNode());
    return (condition == null);
  }
  public static boolean rule_Condition_26_0(final BaseMappingRuleContext _context) {
    return Objects.equals(SNodeOperations.getConcept(_context.getNode()), CONCEPTS.Average$3J);
  }
  public static boolean rule_Condition_26_1(final BaseMappingRuleContext _context) {
    return Objects.equals(SNodeOperations.getConcept(_context.getNode()), CONCEPTS.Min$Qb);
  }
  public static boolean rule_Condition_26_2(final BaseMappingRuleContext _context) {
    return Objects.equals(SNodeOperations.getConcept(_context.getNode()), CONCEPTS.Max$1N);
  }
  public static boolean rule_Condition_26_3(final BaseMappingRuleContext _context) {
    return Objects.equals(SNodeOperations.getConcept(_context.getNode()), CONCEPTS.Count$2L);
  }
  public static boolean rule_Condition_26_4(final BaseMappingRuleContext _context) {
    return Objects.equals(SNodeOperations.getConcept(_context.getNode()), CONCEPTS.Sum$3g);
  }
  public static Object propertyMacro_GetValue_3_0(final PropertyMacroContext _context) {
    return "proj_query" + SNodeOperations.getIndexInParent(_context.getNode());
  }
  public static Object propertyMacro_GetValue_3_1(final PropertyMacroContext _context) {
    return "join_query" + SNodeOperations.getIndexInParent(_context.getNode());
  }
  public static Object propertyMacro_GetValue_3_2(final PropertyMacroContext _context) {
    return "groupBy_query" + SNodeOperations.getIndexInParent(_context.getNode());
  }
  public static Object propertyMacro_GetValue_3_3(final PropertyMacroContext _context) {
    return "orderBy_query" + SNodeOperations.getIndexInParent(_context.getNode());
  }
  public static Object propertyMacro_GetValue_3_4(final PropertyMacroContext _context) {
    for (SNode col : ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.cols$kMcM))) {
      if ((SLinkOperations.getTarget(col, LINKS.aggregationFunction$8ryB) != null)) {
        return SNodeOperations.getConcept(SLinkOperations.getTarget(col, LINKS.aggregationFunction$8ryB)).getName() + "_query" + SNodeOperations.getIndexInParent(_context.getNode());
      }
    }
    return null;
  }
  public static Object propertyMacro_GetValue_5_0(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0), LINKS.condition$d94q), PROPS.textualCondition$n5ly);
  }
  public static Object propertyMacro_GetValue_5_1(final PropertyMacroContext _context) {
    String ret = "";
    for (SNode col : ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.cols$kMcM))) {
      {
        final SNode colRef = col;
        if (SNodeOperations.isInstanceOf(colRef, CONCEPTS.ColumnRef$XM)) {
          if (SNodeOperations.getIndexInParent(col) == ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.cols$kMcM)).count() - 1) {
            ret = ret + SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.name$MnvL);
          } else {
            ret = ret + SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.name$MnvL) + ",";
          }
        }
      }
    }
    return ret;
  }
  public static Object propertyMacro_GetValue_5_2(final PropertyMacroContext _context) {
    String ret = "";
    List<SNode> cols = SLinkOperations.getChildren(SLinkOperations.getTarget(_context.getNode(), LINKS.groupBy$vhgB), LINKS.columns$JBv$);
    for (SNode colRef : ListSequence.fromList(cols)) {
      if (SNodeOperations.getIndexInParent(colRef) == ListSequence.fromList(cols).count() - 1) {
        ret = ret + SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.name$MnvL);
      } else {
        ret = ret + SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.name$MnvL) + ", ";
      }
    }

    return ret;
  }
  public static Object propertyMacro_GetValue_5_3(final PropertyMacroContext _context) {
    String ret = "";
    List<SNode> cols = SLinkOperations.getChildren(SLinkOperations.getTarget(_context.getNode(), LINKS.orderBy$K96v), LINKS.columns$Hhkv);
    for (final SNode colRef : ListSequence.fromList(cols)) {
      String colName = (ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).count() > 1 ? SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.fullName$t1KL) : SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.name$MnvL));
      if (SNodeOperations.getIndexInParent(colRef) == ListSequence.fromList(cols).count() - 1) {
        if (Sequence.fromIterable(SLinkOperations.collect(ListSequence.fromList(SNodeOperations.getNodeDescendants(_context.getNode(), CONCEPTS.ColumnRef$XM, false, new SAbstractConcept[]{})).where((it) -> Objects.equals(SLinkOperations.getTarget(it, LINKS.column$Wyeu), SLinkOperations.getTarget(colRef, LINKS.column$Wyeu))), LINKS.aggregationFunction$8ryB)).isNotEmpty()) {
          ret = ret + SNodeOperations.getConcept(Sequence.fromIterable(SLinkOperations.collect(ListSequence.fromList(SNodeOperations.getNodeDescendants(_context.getNode(), CONCEPTS.ColumnRef$XM, false, new SAbstractConcept[]{})).where((it) -> Objects.equals(SLinkOperations.getTarget(it, LINKS.column$Wyeu), SLinkOperations.getTarget(colRef, LINKS.column$Wyeu))), LINKS.aggregationFunction$8ryB)).toList().get(0)).getConceptAlias() + "(" + colName + ")";
        } else {
          ret = ret + colName;
        }
      } else {
        if (Sequence.fromIterable(SLinkOperations.collect(ListSequence.fromList(SNodeOperations.getNodeDescendants(_context.getNode(), CONCEPTS.ColumnRef$XM, false, new SAbstractConcept[]{})).where((it) -> Objects.equals(SLinkOperations.getTarget(it, LINKS.column$Wyeu), SLinkOperations.getTarget(colRef, LINKS.column$Wyeu))), LINKS.aggregationFunction$8ryB)).isNotEmpty()) {
          ret = ret + SNodeOperations.getConcept(Sequence.fromIterable(SLinkOperations.collect(ListSequence.fromList(SNodeOperations.getNodeDescendants(_context.getNode(), CONCEPTS.ColumnRef$XM, false, new SAbstractConcept[]{})).where((it) -> Objects.equals(SLinkOperations.getTarget(it, LINKS.column$Wyeu), SLinkOperations.getTarget(colRef, LINKS.column$Wyeu))), LINKS.aggregationFunction$8ryB)).toList().get(0)).getConceptAlias() + "(" + colName + "), ";
        } else {
          ret = ret + colName;
        }
      }
    }

    return ret;
  }
  public static Object propertyMacro_GetValue_5_4(final PropertyMacroContext _context) {
    SNode selectColumn = ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.cols$kMcM)).findFirst((it) -> (SLinkOperations.getTarget(it, LINKS.aggregationFunction$8ryB) != null));
    {
      final SNode allColumns = selectColumn;
      if (SNodeOperations.isInstanceOf(allColumns, CONCEPTS.AllColumns$eP)) {
        return "*";
      }
    }
    {
      final SNode columnRef = selectColumn;
      if (SNodeOperations.isInstanceOf(columnRef, CONCEPTS.ColumnRef$XM)) {
        return SPropertyOperations.getString(SLinkOperations.getTarget(columnRef, LINKS.column$Wyeu), PROPS.name$MnvL);
      }
    }
    return null;
  }
  public static Object propertyMacro_GetValue_7_0(final PropertyMacroContext _context) {
    String ret = "";
    for (SNode col : ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.cols$kMcM))) {
      {
        final SNode colRef = col;
        if (SNodeOperations.isInstanceOf(colRef, CONCEPTS.ColumnRef$XM)) {
          if (SNodeOperations.getIndexInParent(col) == ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.cols$kMcM)).count() - 1) {
            ret = ret + SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.name$MnvL);
          } else {
            ret = ret + SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.name$MnvL) + ",";
          }
        }
      }
    }
    return ret;
  }
  public static Object propertyMacro_GetValue_7_1(final PropertyMacroContext _context) {
    String ret = "";
    List<SNode> cols = SLinkOperations.getChildren(SLinkOperations.getTarget(_context.getNode(), LINKS.groupBy$vhgB), LINKS.columns$JBv$);
    for (SNode colRef : ListSequence.fromList(cols)) {
      if (SNodeOperations.getIndexInParent(colRef) == ListSequence.fromList(cols).count() - 1) {
        ret = ret + SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.name$MnvL);
      } else {
        ret = ret + SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.name$MnvL) + ", ";
      }
    }

    return ret;
  }
  public static Object propertyMacro_GetValue_7_2(final PropertyMacroContext _context) {
    String ret = "";
    List<SNode> cols = SLinkOperations.getChildren(SLinkOperations.getTarget(_context.getNode(), LINKS.orderBy$K96v), LINKS.columns$Hhkv);
    for (final SNode colRef : ListSequence.fromList(cols)) {
      String colName = (ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).count() > 1 ? SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.fullName$t1KL) : SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.name$MnvL));
      if (SNodeOperations.getIndexInParent(colRef) == ListSequence.fromList(cols).count() - 1) {
        if (Sequence.fromIterable(SLinkOperations.collect(ListSequence.fromList(SNodeOperations.getNodeDescendants(_context.getNode(), CONCEPTS.ColumnRef$XM, false, new SAbstractConcept[]{})).where((it) -> Objects.equals(SLinkOperations.getTarget(it, LINKS.column$Wyeu), SLinkOperations.getTarget(colRef, LINKS.column$Wyeu))), LINKS.aggregationFunction$8ryB)).isNotEmpty()) {
          ret = ret + SNodeOperations.getConcept(Sequence.fromIterable(SLinkOperations.collect(ListSequence.fromList(SNodeOperations.getNodeDescendants(_context.getNode(), CONCEPTS.ColumnRef$XM, false, new SAbstractConcept[]{})).where((it) -> Objects.equals(SLinkOperations.getTarget(it, LINKS.column$Wyeu), SLinkOperations.getTarget(colRef, LINKS.column$Wyeu))), LINKS.aggregationFunction$8ryB)).toList().get(0)).getConceptAlias() + "(" + colName + ")";
        } else {
          ret = ret + colName;
        }
      } else {
        if (Sequence.fromIterable(SLinkOperations.collect(ListSequence.fromList(SNodeOperations.getNodeDescendants(_context.getNode(), CONCEPTS.ColumnRef$XM, false, new SAbstractConcept[]{})).where((it) -> Objects.equals(SLinkOperations.getTarget(it, LINKS.column$Wyeu), SLinkOperations.getTarget(colRef, LINKS.column$Wyeu))), LINKS.aggregationFunction$8ryB)).isNotEmpty()) {
          ret = ret + SNodeOperations.getConcept(Sequence.fromIterable(SLinkOperations.collect(ListSequence.fromList(SNodeOperations.getNodeDescendants(_context.getNode(), CONCEPTS.ColumnRef$XM, false, new SAbstractConcept[]{})).where((it) -> Objects.equals(SLinkOperations.getTarget(it, LINKS.column$Wyeu), SLinkOperations.getTarget(colRef, LINKS.column$Wyeu))), LINKS.aggregationFunction$8ryB)).toList().get(0)).getConceptAlias() + "(" + colName + "), ";
        } else {
          ret = ret + colName;
        }
      }
    }

    return ret;
  }
  public static Object propertyMacro_GetValue_7_3(final PropertyMacroContext _context) {
    SNode selectColumn = ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.cols$kMcM)).findFirst((it) -> (SLinkOperations.getTarget(it, LINKS.aggregationFunction$8ryB) != null));
    {
      final SNode allColumns = selectColumn;
      if (SNodeOperations.isInstanceOf(allColumns, CONCEPTS.AllColumns$eP)) {
        return "*";
      }
    }
    {
      final SNode columnRef = selectColumn;
      if (SNodeOperations.isInstanceOf(columnRef, CONCEPTS.ColumnRef$XM)) {
        return SPropertyOperations.getString(SLinkOperations.getTarget(columnRef, LINKS.column$Wyeu), PROPS.name$MnvL);
      }
    }
    return null;
  }
  public static Object propertyMacro_GetValue_8_0(final PropertyMacroContext _context) {
    String ret = "";
    List<SNode> cols = SLinkOperations.getChildren(SLinkOperations.getTarget(_context.getNode(), LINKS.groupBy$vhgB), LINKS.columns$JBv$);
    for (SNode colRef : ListSequence.fromList(cols)) {
      if (SNodeOperations.getIndexInParent(colRef) == ListSequence.fromList(cols).count() - 1) {
        if (ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).count() > 1) {
          ret = ret + SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.fullName$t1KL);
        } else {
          ret = ret + SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.name$MnvL);
        }
      } else {
        if (ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).count() > 1) {
          ret = ret + SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.fullName$t1KL) + ", ";
        } else {
          ret = ret + SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.name$MnvL) + ", ";
        }
      }
    }

    return ret;
  }
  public static Object propertyMacro_GetValue_8_1(final PropertyMacroContext _context) {
    String ret = "";
    List<SNode> cols = SLinkOperations.getChildren(SLinkOperations.getTarget(_context.getNode(), LINKS.orderBy$K96v), LINKS.columns$Hhkv);

    for (final SNode colRef : ListSequence.fromList(cols)) {
      String colName = (ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).count() > 1 ? SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.fullName$t1KL) : SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.name$MnvL));
      if (SNodeOperations.getIndexInParent(colRef) == ListSequence.fromList(cols).count() - 1) {
        if (Sequence.fromIterable(SLinkOperations.collect(ListSequence.fromList(SNodeOperations.getNodeDescendants(_context.getNode(), CONCEPTS.ColumnRef$XM, false, new SAbstractConcept[]{})).where((it) -> Objects.equals(SLinkOperations.getTarget(it, LINKS.column$Wyeu), SLinkOperations.getTarget(colRef, LINKS.column$Wyeu))), LINKS.aggregationFunction$8ryB)).isNotEmpty()) {
          ret = ret + SNodeOperations.getConcept(ListSequence.fromList(Sequence.fromIterable(SLinkOperations.collect(ListSequence.fromList(SNodeOperations.getNodeDescendants(_context.getNode(), CONCEPTS.ColumnRef$XM, false, new SAbstractConcept[]{})).where((it) -> Objects.equals(SLinkOperations.getTarget(it, LINKS.column$Wyeu), SLinkOperations.getTarget(colRef, LINKS.column$Wyeu))), LINKS.aggregationFunction$8ryB)).toList()).getElement(0)).getConceptAlias() + "(" + colName + ")";
        } else {
          ret = ret + colName;
        }
      } else {
        if (Sequence.fromIterable(SLinkOperations.collect(ListSequence.fromList(SNodeOperations.getNodeDescendants(_context.getNode(), CONCEPTS.ColumnRef$XM, false, new SAbstractConcept[]{})).where((it) -> Objects.equals(SLinkOperations.getTarget(it, LINKS.column$Wyeu), SLinkOperations.getTarget(colRef, LINKS.column$Wyeu))), LINKS.aggregationFunction$8ryB)).isNotEmpty()) {
          ret = ret + SNodeOperations.getConcept(Sequence.fromIterable(SLinkOperations.collect(ListSequence.fromList(SNodeOperations.getNodeDescendants(_context.getNode(), CONCEPTS.ColumnRef$XM, false, new SAbstractConcept[]{})).where((it) -> Objects.equals(SLinkOperations.getTarget(it, LINKS.column$Wyeu), SLinkOperations.getTarget(colRef, LINKS.column$Wyeu))), LINKS.aggregationFunction$8ryB)).toList().get(0)).getConceptAlias() + "(" + colName + "), ";
        } else {
          ret = ret + colName;
        }
      }
    }

    return ret;
  }
  public static Object propertyMacro_GetValue_8_2(final PropertyMacroContext _context) {
    SNode selectColumn = ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.cols$kMcM)).findFirst((it) -> (SLinkOperations.getTarget(it, LINKS.aggregationFunction$8ryB) != null));
    {
      final SNode allColumns = selectColumn;
      if (SNodeOperations.isInstanceOf(allColumns, CONCEPTS.AllColumns$eP)) {
        return "*";
      }
    }
    {
      final SNode columnRef = selectColumn;
      if (SNodeOperations.isInstanceOf(columnRef, CONCEPTS.ColumnRef$XM)) {
        if (ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).count() > 1) {
          return SPropertyOperations.getString(SLinkOperations.getTarget(columnRef, LINKS.column$Wyeu), PROPS.fullName$t1KL);
        }
        return SPropertyOperations.getString(SLinkOperations.getTarget(columnRef, LINKS.column$Wyeu), PROPS.name$MnvL);
      }
    }
    return null;
  }
  public static Object propertyMacro_GetValue_9_0(final PropertyMacroContext _context) {
    SNode selectColumn = ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.cols$kMcM)).findFirst((it) -> (SLinkOperations.getTarget(it, LINKS.aggregationFunction$8ryB) != null));
    {
      final SNode allColumns = selectColumn;
      if (SNodeOperations.isInstanceOf(allColumns, CONCEPTS.AllColumns$eP)) {
        return "*";
      }
    }
    {
      final SNode columnRef = selectColumn;
      if (SNodeOperations.isInstanceOf(columnRef, CONCEPTS.ColumnRef$XM)) {
        if (ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).count() > 1) {
          return SPropertyOperations.getString(SLinkOperations.getTarget(columnRef, LINKS.column$Wyeu), PROPS.fullName$t1KL);
        }
        return SPropertyOperations.getString(SLinkOperations.getTarget(columnRef, LINKS.column$Wyeu), PROPS.name$MnvL);
      }
    }
    return null;
  }
  public static Object propertyMacro_GetValue_9_1(final PropertyMacroContext _context) {
    String ret = "";
    List<SNode> cols = SLinkOperations.getChildren(SLinkOperations.getTarget(_context.getNode(), LINKS.orderBy$K96v), LINKS.columns$Hhkv);
    for (final SNode colRef : ListSequence.fromList(cols)) {
      String colName = (ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).count() > 1 ? SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.fullName$t1KL) : SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.name$MnvL));
      if (SNodeOperations.getIndexInParent(colRef) == ListSequence.fromList(cols).count() - 1) {
        if (Sequence.fromIterable(SLinkOperations.collect(ListSequence.fromList(SNodeOperations.getNodeDescendants(_context.getNode(), CONCEPTS.ColumnRef$XM, false, new SAbstractConcept[]{})).where((it) -> Objects.equals(SLinkOperations.getTarget(it, LINKS.column$Wyeu), SLinkOperations.getTarget(colRef, LINKS.column$Wyeu))), LINKS.aggregationFunction$8ryB)).isNotEmpty()) {
          ret = ret + SNodeOperations.getConcept(ListSequence.fromList(Sequence.fromIterable(SLinkOperations.collect(ListSequence.fromList(SNodeOperations.getNodeDescendants(_context.getNode(), CONCEPTS.ColumnRef$XM, false, new SAbstractConcept[]{})).where((it) -> Objects.equals(SLinkOperations.getTarget(it, LINKS.column$Wyeu), SLinkOperations.getTarget(colRef, LINKS.column$Wyeu))), LINKS.aggregationFunction$8ryB)).toList()).getElement(0)).getConceptAlias() + "(" + colName + ")";
        } else {
          ret = ret + colName;
        }
      } else {
        if (Sequence.fromIterable(SLinkOperations.collect(ListSequence.fromList(SNodeOperations.getNodeDescendants(_context.getNode(), CONCEPTS.ColumnRef$XM, false, new SAbstractConcept[]{})).where((it) -> Objects.equals(SLinkOperations.getTarget(it, LINKS.column$Wyeu), SLinkOperations.getTarget(colRef, LINKS.column$Wyeu))), LINKS.aggregationFunction$8ryB)).isNotEmpty()) {
          ret = ret + SNodeOperations.getConcept(Sequence.fromIterable(SLinkOperations.collect(ListSequence.fromList(SNodeOperations.getNodeDescendants(_context.getNode(), CONCEPTS.ColumnRef$XM, false, new SAbstractConcept[]{})).where((it) -> Objects.equals(SLinkOperations.getTarget(it, LINKS.column$Wyeu), SLinkOperations.getTarget(colRef, LINKS.column$Wyeu))), LINKS.aggregationFunction$8ryB)).toList().get(0)).getConceptAlias() + "(" + colName + "), ";
        } else {
          ret = ret + colName;
        }
      }
    }

    return ret;
  }
  public static Object propertyMacro_GetValue_10_0(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.textualCondition$n5ly);
  }
  public static Object propertyMacro_GetValue_10_1(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.joinCondition$rc3m), LINKS.leftColumn$NKe0), LINKS.column$Wyeu), PROPS.name$MnvL) + SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.joinCondition$rc3m), LINKS.rightColumn$NKG2), LINKS.column$Wyeu), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_11_0(final PropertyMacroContext _context) {
    String ret = "";
    for (SNode col : ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.cols$kMcM))) {
      {
        final SNode colRef = col;
        if (SNodeOperations.isInstanceOf(colRef, CONCEPTS.ColumnRef$XM)) {
          if (SNodeOperations.getIndexInParent(col) == ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.cols$kMcM)).count() - 1) {
            ret = ret + SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.fullName$t1KL);
          } else {
            ret = ret + SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.fullName$t1KL) + ",";
          }
        }
      }
    }
    return ret;
  }
  public static Object propertyMacro_GetValue_11_1(final PropertyMacroContext _context) {
    String ret = "";
    List<SNode> cols = SLinkOperations.getChildren(SLinkOperations.getTarget(_context.getNode(), LINKS.groupBy$vhgB), LINKS.columns$JBv$);
    for (SNode colRef : ListSequence.fromList(cols)) {
      if (SNodeOperations.getIndexInParent(colRef) == ListSequence.fromList(cols).count() - 1) {
        ret = ret + SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.fullName$t1KL);
      } else {
        ret = ret + SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.fullName$t1KL) + ", ";
      }
    }

    return ret;
  }
  public static Object propertyMacro_GetValue_11_2(final PropertyMacroContext _context) {
    String ret = "";
    List<SNode> cols = SLinkOperations.getChildren(SLinkOperations.getTarget(_context.getNode(), LINKS.orderBy$K96v), LINKS.columns$Hhkv);
    for (SNode colRef : ListSequence.fromList(cols)) {
      String colName = (ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).count() > 1 ? SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.name$MnvL) : SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.fullName$t1KL));
      if (SNodeOperations.getIndexInParent(colRef) == ListSequence.fromList(cols).count() - 1) {
        SAbstractConcept cncpt = SNodeOperations.getConcept(SLinkOperations.getTarget(colRef, LINKS.aggregationFunction$8ryB));
        switch (conceptIndex.index(cncpt)) {
          case 0:
            if (true) {
              ret = ret + "AVG(" + colName + ")";
            }
            break;
          case 1:
            if (true) {
              ret = ret + "COUNT(" + colName + ")";
            }
            break;
          case 2:
            if (true) {
              ret = ret + "MAX(" + colName + ")";
            }
            break;
          case 3:
            if (true) {
              ret = ret + "MIN(" + colName + ")";
            }
            break;
          case 4:
            if (true) {
              ret = ret + "SUM(" + colName + ")";
            }
            break;
          default:
        }
      } else {
        SAbstractConcept cncpt1 = SNodeOperations.getConcept(SLinkOperations.getTarget(colRef, LINKS.aggregationFunction$8ryB));
        switch (conceptIndex1.index(cncpt1)) {
          case 0:
            if (true) {
              ret = ret + "AVG(" + colName + "), ";
            }
            break;
          case 1:
            if (true) {
              ret = ret + "COUNT(" + colName + "), ";
            }
            break;
          case 2:
            if (true) {
              ret = ret + "MAX(" + colName + "), ";
            }
            break;
          case 3:
            if (true) {
              ret = ret + "MIN(" + colName + "), ";
            }
            break;
          case 4:
            if (true) {
              ret = ret + "SUM(" + colName + "), ";
            }
            break;
          default:
        }
      }
    }

    return ret;
  }
  public static Object propertyMacro_GetValue_11_3(final PropertyMacroContext _context) {
    SNode selectColumn = ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.cols$kMcM)).findFirst((it) -> (SLinkOperations.getTarget(it, LINKS.aggregationFunction$8ryB) != null));
    {
      final SNode allColumns = selectColumn;
      if (SNodeOperations.isInstanceOf(allColumns, CONCEPTS.AllColumns$eP)) {
        return "*";
      }
    }
    {
      final SNode columnRef = selectColumn;
      if (SNodeOperations.isInstanceOf(columnRef, CONCEPTS.ColumnRef$XM)) {
        return SPropertyOperations.getString(SLinkOperations.getTarget(columnRef, LINKS.column$Wyeu), PROPS.fullName$t1KL);
      }
    }
    return null;
  }
  public static Object propertyMacro_GetValue_12_0(final PropertyMacroContext _context) {
    SNode table = null;
    {
      final SNode simpleCondition = _context.getNode();
      if (SNodeOperations.isInstanceOf(simpleCondition, CONCEPTS.SimpleCondition$89)) {
        table = SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(SLinkOperations.getTarget(simpleCondition, LINKS.column$Aee5), LINKS.column$Wyeu), CONCEPTS.CreateTable$ca, false, false);
      }
    }
    {
      final SNode multipleCondition = _context.getNode();
      if (SNodeOperations.isInstanceOf(multipleCondition, CONCEPTS.MultipleCondition$9A)) {
        SNode c = multipleCondition;
        while (true) {
          if (SNodeOperations.isInstanceOf(c, CONCEPTS.MultipleCondition$9A)) {
            c = SLinkOperations.getTarget(SNodeOperations.cast(c, CONCEPTS.MultipleCondition$9A), LINKS.conditionDx$A_03);
          } else {
            table = SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.cast(c, CONCEPTS.SimpleCondition$89), LINKS.column$Aee5), LINKS.column$Wyeu), CONCEPTS.CreateTable$ca, false, false);
            break;
          }
        }
      }
    }

    if (SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), LINKS.joinCondition$rc3m), LINKS.leftColumn$NKe0), LINKS.column$Wyeu), CONCEPTS.CreateTable$ca, false, false) == table) {
      return SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), LINKS.joinCondition$rc3m), LINKS.leftColumn$NKe0), LINKS.column$Wyeu), PROPS.fullName$t1KL);
    }
    return SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), LINKS.joinCondition$rc3m), LINKS.rightColumn$NKG2), LINKS.column$Wyeu), PROPS.fullName$t1KL);
  }
  public static Object propertyMacro_GetValue_12_1(final PropertyMacroContext _context) {
    String ret = "";
    List<SNode> cols = SLinkOperations.getChildren(SLinkOperations.getTarget(_context.getNode(), LINKS.orderBy$K96v), LINKS.columns$Hhkv);
    for (SNode colRef : ListSequence.fromList(cols)) {
      if (SNodeOperations.getIndexInParent(colRef) == ListSequence.fromList(cols).count() - 1) {
        if (ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).count() > 1) {
          ret = ret + SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.fullName$t1KL);
        } else {
          ret = ret + SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.name$MnvL);
        }
      } else {
        if (ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).count() > 1) {
          ret = ret + SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.fullName$t1KL) + ", ";
        } else {
          ret = ret + SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.name$MnvL) + ", ";
        }
      }
    }

    return ret;
  }
  public static Object propertyMacro_GetValue_13_0(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), LINKS.joinCondition$rc3m), LINKS.leftColumn$NKe0), LINKS.column$Wyeu), PROPS.fullName$t1KL) + ", " + SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), LINKS.joinCondition$rc3m), LINKS.rightColumn$NKG2), LINKS.column$Wyeu), PROPS.fullName$t1KL);
  }
  public static Object propertyMacro_GetValue_17_0(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0), LINKS.condition$d94q), PROPS.textualCondition$n5ly);
  }
  public static Object propertyMacro_GetValue_17_1(final PropertyMacroContext _context) {
    String ret = "";
    for (SNode col : ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.cols$kMcM))) {
      {
        final SNode colRef = col;
        if (SNodeOperations.isInstanceOf(colRef, CONCEPTS.ColumnRef$XM)) {
          if (SNodeOperations.getIndexInParent(col) == ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.cols$kMcM)).count() - 1) {
            ret = ret + SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.name$MnvL);
          } else {
            ret = ret + SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.name$MnvL) + ",";
          }
        }
      }
    }
    return ret;
  }
  public static Object propertyMacro_GetValue_17_2(final PropertyMacroContext _context) {
    String ret = "";
    List<SNode> cols = SLinkOperations.getChildren(SLinkOperations.getTarget(_context.getNode(), LINKS.groupBy$vhgB), LINKS.columns$JBv$);
    for (SNode colRef : ListSequence.fromList(cols)) {
      if (SNodeOperations.getIndexInParent(colRef) == ListSequence.fromList(cols).count() - 1) {
        ret = ret + SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.name$MnvL);
      } else {
        ret = ret + SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.name$MnvL) + ", ";
      }
    }

    return ret;
  }
  public static Object propertyMacro_GetValue_17_3(final PropertyMacroContext _context) {
    String ret = "";
    List<SNode> cols = SLinkOperations.getChildren(SLinkOperations.getTarget(_context.getNode(), LINKS.orderBy$K96v), LINKS.columns$Hhkv);
    for (final SNode colRef : ListSequence.fromList(cols)) {
      String colName = (ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).count() > 1 ? SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.fullName$t1KL) : SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.name$MnvL));
      if (SNodeOperations.getIndexInParent(colRef) == ListSequence.fromList(cols).count() - 1) {
        if (Sequence.fromIterable(SLinkOperations.collect(ListSequence.fromList(SNodeOperations.getNodeDescendants(_context.getNode(), CONCEPTS.ColumnRef$XM, false, new SAbstractConcept[]{})).where((it) -> Objects.equals(SLinkOperations.getTarget(it, LINKS.column$Wyeu), SLinkOperations.getTarget(colRef, LINKS.column$Wyeu))), LINKS.aggregationFunction$8ryB)).isNotEmpty()) {
          ret = ret + SNodeOperations.getConcept(Sequence.fromIterable(SLinkOperations.collect(ListSequence.fromList(SNodeOperations.getNodeDescendants(_context.getNode(), CONCEPTS.ColumnRef$XM, false, new SAbstractConcept[]{})).where((it) -> Objects.equals(SLinkOperations.getTarget(it, LINKS.column$Wyeu), SLinkOperations.getTarget(colRef, LINKS.column$Wyeu))), LINKS.aggregationFunction$8ryB)).toList().get(0)).getConceptAlias() + "(" + colName + ")";
        } else {
          ret = ret + colName;
        }
      } else {
        if (Sequence.fromIterable(SLinkOperations.collect(ListSequence.fromList(SNodeOperations.getNodeDescendants(_context.getNode(), CONCEPTS.ColumnRef$XM, false, new SAbstractConcept[]{})).where((it) -> Objects.equals(SLinkOperations.getTarget(it, LINKS.column$Wyeu), SLinkOperations.getTarget(colRef, LINKS.column$Wyeu))), LINKS.aggregationFunction$8ryB)).isNotEmpty()) {
          ret = ret + SNodeOperations.getConcept(Sequence.fromIterable(SLinkOperations.collect(ListSequence.fromList(SNodeOperations.getNodeDescendants(_context.getNode(), CONCEPTS.ColumnRef$XM, false, new SAbstractConcept[]{})).where((it) -> Objects.equals(SLinkOperations.getTarget(it, LINKS.column$Wyeu), SLinkOperations.getTarget(colRef, LINKS.column$Wyeu))), LINKS.aggregationFunction$8ryB)).toList().get(0)).getConceptAlias() + "(" + colName + "), ";
        } else {
          ret = ret + colName;
        }
      }
    }

    return ret;
  }
  public static Object propertyMacro_GetValue_17_4(final PropertyMacroContext _context) {
    SNode selectColumn = ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.cols$kMcM)).findFirst((it) -> (SLinkOperations.getTarget(it, LINKS.aggregationFunction$8ryB) != null));
    {
      final SNode allColumns = selectColumn;
      if (SNodeOperations.isInstanceOf(allColumns, CONCEPTS.AllColumns$eP)) {
        return "*";
      }
    }
    {
      final SNode columnRef = selectColumn;
      if (SNodeOperations.isInstanceOf(columnRef, CONCEPTS.ColumnRef$XM)) {
        return SPropertyOperations.getString(SLinkOperations.getTarget(columnRef, LINKS.column$Wyeu), PROPS.name$MnvL);
      }
    }
    return null;
  }
  public static Object propertyMacro_GetValue_18_0(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.textualCondition$n5ly);
  }
  public static Object propertyMacro_GetValue_18_1(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.joinCondition$rc3m), LINKS.leftColumn$NKe0), LINKS.column$Wyeu), PROPS.name$MnvL) + SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.joinCondition$rc3m), LINKS.rightColumn$NKG2), LINKS.column$Wyeu), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_19_0(final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), LINKS.window$XLAN), PROPS.size$SW_U));
  }
  public static Object propertyMacro_GetValue_20_0(final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), LINKS.window$XLAN), PROPS.size$SW_U));
  }
  public static Object propertyMacro_GetValue_21_0(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.textualCondition$n5ly);
  }
  public static Object propertyMacro_GetValue_22_0(final PropertyMacroContext _context) {
    SNode condition = (SNode) _context.getSessionObject(_context.getNode());
    return SPropertyOperations.getString(condition, PROPS.textualCondition$n5ly);
  }
  public static Object propertyMacro_GetValue_22_1(final PropertyMacroContext _context) {
    if (SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), LINKS.joinCondition$rc3m), LINKS.leftColumn$NKe0), LINKS.column$Wyeu), CONCEPTS.CreateTable$ca, false, false) == SLinkOperations.getTarget(_context.getNode(), LINKS.tableRef$boeY)) {
      return SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), LINKS.joinCondition$rc3m), LINKS.leftColumn$NKe0), LINKS.column$Wyeu), PROPS.fullName$t1KL);
    }
    return SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), LINKS.joinCondition$rc3m), LINKS.rightColumn$NKG2), LINKS.column$Wyeu), PROPS.fullName$t1KL);
  }
  public static Object propertyMacro_GetValue_23_0(final PropertyMacroContext _context) {
    SNode condition = (SNode) _context.getSessionObject(_context.getNode());
    return SPropertyOperations.getString(condition, PROPS.textualCondition$n5ly);
  }
  public static Object propertyMacro_GetValue_23_1(final PropertyMacroContext _context) {
    if (SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), LINKS.joinCondition$rc3m), LINKS.leftColumn$NKe0), LINKS.column$Wyeu), CONCEPTS.CreateTable$ca, false, false) == SLinkOperations.getTarget(_context.getNode(), LINKS.tableRef$boeY)) {
      return SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), LINKS.joinCondition$rc3m), LINKS.leftColumn$NKe0), LINKS.column$Wyeu), PROPS.fullName$t1KL);
    }
    return SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), LINKS.joinCondition$rc3m), LINKS.rightColumn$NKG2), LINKS.column$Wyeu), PROPS.fullName$t1KL);
  }
  public static Object propertyMacro_GetValue_24_0(final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), LINKS.window$XLAN), PROPS.size$SW_U));

  }
  public static Object propertyMacro_GetValue_25_0(final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), LINKS.window$XLAN), PROPS.size$SW_U));
  }
  public static Object propertyMacro_GetValue_27_0(final PropertyMacroContext _context) {
    return _context.createUniqueName("select", _context.getNode());
  }
  public static Object propertyMacro_GetValue_27_1(final PropertyMacroContext _context) {
    return _context.createUniqueName("window", _context.getNode());
  }
  public static Object propertyMacro_GetValue_27_2(final PropertyMacroContext _context) {
    String ret = "";
    List<SNode> cols = SLinkOperations.getChildren(SLinkOperations.getTarget(_context.getNode(), LINKS.orderBy$K96v), LINKS.columns$Hhkv);

    for (final SNode colRef : ListSequence.fromList(cols)) {
      String colName = (ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).count() > 1 ? SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.fullName$t1KL) : SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.name$MnvL));
      if (SNodeOperations.getIndexInParent(colRef) == ListSequence.fromList(cols).count() - 1) {
        if (Sequence.fromIterable(SLinkOperations.collect(ListSequence.fromList(SNodeOperations.getNodeDescendants(_context.getNode(), CONCEPTS.ColumnRef$XM, false, new SAbstractConcept[]{})).where((it) -> Objects.equals(SLinkOperations.getTarget(it, LINKS.column$Wyeu), SLinkOperations.getTarget(colRef, LINKS.column$Wyeu))), LINKS.aggregationFunction$8ryB)).isNotEmpty()) {
          ret = ret + SNodeOperations.getConcept(Sequence.fromIterable(SLinkOperations.collect(ListSequence.fromList(SNodeOperations.getNodeDescendants(_context.getNode(), CONCEPTS.ColumnRef$XM, false, new SAbstractConcept[]{})).where((it) -> Objects.equals(SLinkOperations.getTarget(it, LINKS.column$Wyeu), SLinkOperations.getTarget(colRef, LINKS.column$Wyeu))), LINKS.aggregationFunction$8ryB)).toList().get(0)).getConceptAlias() + "(" + colName + ")";
        } else {
          ret = ret + colName;
        }
      } else {
        if (Sequence.fromIterable(SLinkOperations.collect(ListSequence.fromList(SNodeOperations.getNodeDescendants(_context.getNode(), CONCEPTS.ColumnRef$XM, false, new SAbstractConcept[]{})).where((it) -> Objects.equals(SLinkOperations.getTarget(it, LINKS.column$Wyeu), SLinkOperations.getTarget(colRef, LINKS.column$Wyeu))), LINKS.aggregationFunction$8ryB)).isNotEmpty()) {
          ret = ret + SNodeOperations.getConcept(Sequence.fromIterable(SLinkOperations.collect(ListSequence.fromList(SNodeOperations.getNodeDescendants(_context.getNode(), CONCEPTS.ColumnRef$XM, false, new SAbstractConcept[]{})).where((it) -> Objects.equals(SLinkOperations.getTarget(it, LINKS.column$Wyeu), SLinkOperations.getTarget(colRef, LINKS.column$Wyeu))), LINKS.aggregationFunction$8ryB)).toList().get(0)).getConceptAlias() + "(" + colName + "), ";
        } else {
          ret = ret + colName;
        }
      }
    }

    return ret;
  }
  public static Object propertyMacro_GetValue_27_3(final PropertyMacroContext _context) {
    SNode table = null;
    {
      final SNode simpleCondition = _context.getNode();
      if (SNodeOperations.isInstanceOf(simpleCondition, CONCEPTS.SimpleCondition$89)) {
        table = SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(SLinkOperations.getTarget(simpleCondition, LINKS.column$Aee5), LINKS.column$Wyeu), CONCEPTS.CreateTable$ca, false, false);
      }
    }
    {
      final SNode multipleCondition = _context.getNode();
      if (SNodeOperations.isInstanceOf(multipleCondition, CONCEPTS.MultipleCondition$9A)) {
        SNode c = multipleCondition;
        while (true) {
          if (SNodeOperations.isInstanceOf(c, CONCEPTS.MultipleCondition$9A)) {
            c = SLinkOperations.getTarget(SNodeOperations.cast(c, CONCEPTS.MultipleCondition$9A), LINKS.conditionDx$A_03);
          } else {
            table = SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.cast(c, CONCEPTS.SimpleCondition$89), LINKS.column$Aee5), LINKS.column$Wyeu), CONCEPTS.CreateTable$ca, false, false);
            break;
          }
        }
      }
    }

    if (SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), LINKS.joinCondition$rc3m), LINKS.leftColumn$NKe0), LINKS.column$Wyeu), CONCEPTS.CreateTable$ca, false, false) == table) {
      return SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), LINKS.joinCondition$rc3m), LINKS.leftColumn$NKe0), LINKS.column$Wyeu), PROPS.fullName$t1KL);
    }
    return SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), LINKS.joinCondition$rc3m), LINKS.rightColumn$NKG2), LINKS.column$Wyeu), PROPS.fullName$t1KL);
  }
  public static Object propertyMacro_GetValue_27_4(final PropertyMacroContext _context) {
    String ret = "";
    List<SNode> cols = SLinkOperations.getChildren(SLinkOperations.getTarget(_context.getNode(), LINKS.orderBy$K96v), LINKS.columns$Hhkv);
    for (final SNode colRef : ListSequence.fromList(cols)) {
      String colName = (ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).count() > 1 ? SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.fullName$t1KL) : SPropertyOperations.getString(SLinkOperations.getTarget(colRef, LINKS.column$Wyeu), PROPS.name$MnvL));
      if (SNodeOperations.getIndexInParent(colRef) == ListSequence.fromList(cols).count() - 1) {
        if (Sequence.fromIterable(SLinkOperations.collect(ListSequence.fromList(SNodeOperations.getNodeDescendants(_context.getNode(), CONCEPTS.ColumnRef$XM, false, new SAbstractConcept[]{})).where((it) -> Objects.equals(SLinkOperations.getTarget(it, LINKS.column$Wyeu), SLinkOperations.getTarget(colRef, LINKS.column$Wyeu))), LINKS.aggregationFunction$8ryB)).isNotEmpty()) {
          ret = ret + SNodeOperations.getConcept(Sequence.fromIterable(SLinkOperations.collect(ListSequence.fromList(SNodeOperations.getNodeDescendants(_context.getNode(), CONCEPTS.ColumnRef$XM, false, new SAbstractConcept[]{})).where((it) -> Objects.equals(SLinkOperations.getTarget(it, LINKS.column$Wyeu), SLinkOperations.getTarget(colRef, LINKS.column$Wyeu))), LINKS.aggregationFunction$8ryB)).toList().get(0)).getConceptAlias() + "(" + colName + ")";
        } else {
          ret = ret + colName;
        }
      } else {
        if (Sequence.fromIterable(SLinkOperations.collect(ListSequence.fromList(SNodeOperations.getNodeDescendants(_context.getNode(), CONCEPTS.ColumnRef$XM, false, new SAbstractConcept[]{})).where((it) -> Objects.equals(SLinkOperations.getTarget(it, LINKS.column$Wyeu), SLinkOperations.getTarget(colRef, LINKS.column$Wyeu))), LINKS.aggregationFunction$8ryB)).isNotEmpty()) {
          ret = ret + SNodeOperations.getConcept(Sequence.fromIterable(SLinkOperations.collect(ListSequence.fromList(SNodeOperations.getNodeDescendants(_context.getNode(), CONCEPTS.ColumnRef$XM, false, new SAbstractConcept[]{})).where((it) -> Objects.equals(SLinkOperations.getTarget(it, LINKS.column$Wyeu), SLinkOperations.getTarget(colRef, LINKS.column$Wyeu))), LINKS.aggregationFunction$8ryB)).toList().get(0)).getConceptAlias() + "(" + colName + "), ";
        } else {
          ret = ret + colName;
        }
      }
    }

    return ret;
  }
  public static Object propertyMacro_GetValue_27_5(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.name$MnvL);
  }
  public static Object referenceMacro_GetReferent_1_0(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "WindowActor");
  }
  public static Object referenceMacro_GetReferent_1_1(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "WindowActor");
  }
  public static Object referenceMacro_GetReferent_1_2(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "SelectionActor");
  }
  public static Object referenceMacro_GetReferent_1_3(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "SelectionActor");
  }
  public static Object referenceMacro_GetReferent_1_4(final ReferenceMacroContext _context) {
    return ListSequence.fromList(_context.getAllOutputNodesByInputNodeAndMappingLabel(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), "SelectionActor")).getElement((Integer) _context.getVariable("loop:index"));
  }
  public static Object referenceMacro_GetReferent_1_5(final ReferenceMacroContext _context) {
    return ListSequence.fromList(_context.getAllOutputNodesByInputNodeAndMappingLabel(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), "SelectionActor")).getElement((Integer) _context.getVariable("loop:index"));
  }
  public static Object referenceMacro_GetReferent_1_6(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "ProjectionActor");
  }
  public static Object referenceMacro_GetReferent_1_7(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "JoinActor");
  }
  public static Object referenceMacro_GetReferent_1_8(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "GroupByActor");
  }
  public static Object referenceMacro_GetReferent_1_9(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "OrderByActor");
  }
  public static Object referenceMacro_GetReferent_1_10(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "AggregateFunctionActor");
  }
  public static Object referenceMacro_GetReferent_2_0(final ReferenceMacroContext _context) {
    return ListSequence.fromList(_context.getAllOutputNodesByInputNodeAndMappingLabel(_context.getNode(), "SelectionActor")).getElement(((Integer) _context.getVariable("index")));
  }
  public static Object referenceMacro_GetReferent_3_0(final ReferenceMacroContext _context) {
    SNode aggFunction = SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.cols$kMcM)).findFirst((it) -> (SLinkOperations.getTarget(it, LINKS.aggregationFunction$8ryB) != null)), LINKS.aggregationFunction$8ryB);
    return _context.getOutputNodeByInputNodeAndMappingLabel((SNode) _context.getSessionObject(SNodeOperations.getConcept(aggFunction).getName()), "aggFunctionBehavior");
  }
  public static Object referenceMacro_GetReferent_4_0(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "AggregateFunctionActorBox");
  }
  public static Object referenceMacro_GetReferent_4_1(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "OrderByActorBox");
  }
  public static Object referenceMacro_GetReferent_5_0(final ReferenceMacroContext _context) {
    if ((SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).getElement(0), LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false) == null)) {
      String key = ((SLinkOperations.getTarget(_context.getNode(), LINKS.window$XLAN) == null) ? SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0), LINKS.condition$d94q), PROPS.textualCondition$n5ly) : SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0), LINKS.condition$d94q), PROPS.textualCondition$n5ly) + String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), LINKS.window$XLAN), PROPS.size$SW_U)));
      return _context.getOutputNodeByInputNodeAndMappingLabel((SNode) _context.getSessionObject(key), "SelectionActorBoxFromCondition");
    }
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "SelectionActorBox");
  }
  public static Object referenceMacro_GetReferent_5_1(final ReferenceMacroContext _context) {

    SNode aliasDefQuery = SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).getElement(0), LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false);

    if ((aliasDefQuery == null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Script$Rg, false, false), "DataSourceActorBox");
    }

    if ((ListSequence.fromList(SLinkOperations.getChildren(aliasDefQuery, LINKS.cols$kMcM)).findFirst((it) -> (SLinkOperations.getTarget(it, LINKS.aggregationFunction$8ryB) != null)) != null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefQuery, "AggregateFunctionActorBox");
    } else if ((SLinkOperations.getTarget(aliasDefQuery, LINKS.orderBy$K96v) != null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefQuery, "OrderByActorBox");
    } else if ((SLinkOperations.getTarget(aliasDefQuery, LINKS.groupBy$vhgB) != null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefQuery, "GroupByActorBox");
    } else if (!(Objects.equals(SLinkOperations.getChildren(aliasDefQuery, LINKS.cols$kMcM).get(0).getConcept(), CONCEPTS.AllColumns$eP))) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefQuery, "ProjectionActorBox");
    } else {
      String key = ((SLinkOperations.getTarget(aliasDefQuery, LINKS.window$XLAN) == null) ? SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(aliasDefQuery, LINKS.where$e1s0), LINKS.condition$d94q), PROPS.textualCondition$n5ly) : SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(aliasDefQuery, LINKS.where$e1s0), LINKS.condition$d94q), PROPS.textualCondition$n5ly) + String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(aliasDefQuery, LINKS.window$XLAN), PROPS.size$SW_U)));
      return _context.getOutputNodeByInputNodeAndMappingLabel((SNode) _context.getSessionObject(key), "SelectionActorBoxFromCondition");
    }
  }
  public static Object referenceMacro_GetReferent_5_2(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "ProjectionActorBox");
  }
  public static Object referenceMacro_GetReferent_5_3(final ReferenceMacroContext _context) {
    SNode aliasDefQuery = SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).getElement(0), LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false);

    if ((aliasDefQuery == null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Script$Rg, false, false), "DataSourceActorBox");
    }

    if ((ListSequence.fromList(SLinkOperations.getChildren(aliasDefQuery, LINKS.cols$kMcM)).findFirst((it) -> (SLinkOperations.getTarget(it, LINKS.aggregationFunction$8ryB) != null)) != null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefQuery, "AggregateFunctionActorBox");
    } else if ((SLinkOperations.getTarget(aliasDefQuery, LINKS.orderBy$K96v) != null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefQuery, "OrderByActorBox");
    } else if ((SLinkOperations.getTarget(aliasDefQuery, LINKS.groupBy$vhgB) != null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefQuery, "GroupByActorBox");
    } else if (!(Objects.equals(SLinkOperations.getChildren(aliasDefQuery, LINKS.cols$kMcM).get(0).getConcept(), CONCEPTS.AllColumns$eP))) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefQuery, "ProjectionActorBox");
    } else {
      String key = ((SLinkOperations.getTarget(aliasDefQuery, LINKS.window$XLAN) == null) ? SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(aliasDefQuery, LINKS.where$e1s0), LINKS.condition$d94q), PROPS.textualCondition$n5ly) : SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(aliasDefQuery, LINKS.where$e1s0), LINKS.condition$d94q), PROPS.textualCondition$n5ly) + String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(aliasDefQuery, LINKS.window$XLAN), PROPS.size$SW_U)));
      return _context.getOutputNodeByInputNodeAndMappingLabel((SNode) _context.getSessionObject(key), "SelectionActorBoxFromCondition");
    }
  }
  public static Object referenceMacro_GetReferent_5_4(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "GroupByActorBox");
  }
  public static Object referenceMacro_GetReferent_5_5(final ReferenceMacroContext _context) {
    SNode aliasDefQuery = SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).getElement(0), LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false);

    if ((aliasDefQuery == null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Script$Rg, false, false), "DataSourceActorBox");
    }

    if ((ListSequence.fromList(SLinkOperations.getChildren(aliasDefQuery, LINKS.cols$kMcM)).findFirst((it) -> (SLinkOperations.getTarget(it, LINKS.aggregationFunction$8ryB) != null)) != null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefQuery, "AggregateFunctionActorBox");
    } else if ((SLinkOperations.getTarget(aliasDefQuery, LINKS.orderBy$K96v) != null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefQuery, "OrderByActorBox");
    } else if ((SLinkOperations.getTarget(aliasDefQuery, LINKS.groupBy$vhgB) != null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefQuery, "GroupByActorBox");
    } else if (!(Objects.equals(SLinkOperations.getChildren(aliasDefQuery, LINKS.cols$kMcM).get(0).getConcept(), CONCEPTS.AllColumns$eP))) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefQuery, "ProjectionActorBox");
    } else {
      String key = ((SLinkOperations.getTarget(aliasDefQuery, LINKS.window$XLAN) == null) ? SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(aliasDefQuery, LINKS.where$e1s0), LINKS.condition$d94q), PROPS.textualCondition$n5ly) : SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(aliasDefQuery, LINKS.where$e1s0), LINKS.condition$d94q), PROPS.textualCondition$n5ly) + String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(aliasDefQuery, LINKS.window$XLAN), PROPS.size$SW_U)));
      return _context.getOutputNodeByInputNodeAndMappingLabel((SNode) _context.getSessionObject(key), "SelectionActorBoxFromCondition");
    }
  }
  public static Object referenceMacro_GetReferent_5_6(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "OrderByActorBox");
  }
  public static Object referenceMacro_GetReferent_5_7(final ReferenceMacroContext _context) {
    SNode aliasDefQuery = SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).getElement(0), LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false);

    if ((aliasDefQuery == null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Script$Rg, false, false), "DataSourceActorBox");
    }

    if ((ListSequence.fromList(SLinkOperations.getChildren(aliasDefQuery, LINKS.cols$kMcM)).findFirst((it) -> (SLinkOperations.getTarget(it, LINKS.aggregationFunction$8ryB) != null)) != null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefQuery, "AggregateFunctionActorBox");
    } else if ((SLinkOperations.getTarget(aliasDefQuery, LINKS.orderBy$K96v) != null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefQuery, "OrderByActorBox");
    } else if ((SLinkOperations.getTarget(aliasDefQuery, LINKS.groupBy$vhgB) != null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefQuery, "GroupByActorBox");
    } else if (!(Objects.equals(SLinkOperations.getChildren(aliasDefQuery, LINKS.cols$kMcM).get(0).getConcept(), CONCEPTS.AllColumns$eP))) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefQuery, "ProjectionActorBox");
    } else {
      String key = ((SLinkOperations.getTarget(aliasDefQuery, LINKS.window$XLAN) == null) ? SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(aliasDefQuery, LINKS.where$e1s0), LINKS.condition$d94q), PROPS.textualCondition$n5ly) : SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(aliasDefQuery, LINKS.where$e1s0), LINKS.condition$d94q), PROPS.textualCondition$n5ly) + String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(aliasDefQuery, LINKS.window$XLAN), PROPS.size$SW_U)));
      return _context.getOutputNodeByInputNodeAndMappingLabel((SNode) _context.getSessionObject(key), "SelectionActorBoxFromCondition");
    }

  }
  public static Object referenceMacro_GetReferent_5_8(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "AggregateFunctionActorBox");
  }
  public static Object referenceMacro_GetReferent_5_9(final ReferenceMacroContext _context) {
    SNode aliasDefQuery = SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).getElement(0), LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false);

    if ((aliasDefQuery == null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Script$Rg, false, false), "DataSourceActorBox");
    }

    if ((ListSequence.fromList(SLinkOperations.getChildren(aliasDefQuery, LINKS.cols$kMcM)).findFirst((it) -> (SLinkOperations.getTarget(it, LINKS.aggregationFunction$8ryB) != null)) != null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefQuery, "AggregateFunctionActorBox");
    } else if ((SLinkOperations.getTarget(aliasDefQuery, LINKS.orderBy$K96v) != null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefQuery, "OrderByActorBox");
    } else if ((SLinkOperations.getTarget(aliasDefQuery, LINKS.groupBy$vhgB) != null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefQuery, "GroupByActorBox");
    } else if (!(Objects.equals(SLinkOperations.getChildren(aliasDefQuery, LINKS.cols$kMcM).get(0).getConcept(), CONCEPTS.AllColumns$eP))) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefQuery, "ProjectionActorBox");
    } else {
      String key = ((SLinkOperations.getTarget(aliasDefQuery, LINKS.window$XLAN) == null) ? SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(aliasDefQuery, LINKS.where$e1s0), LINKS.condition$d94q), PROPS.textualCondition$n5ly) : SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(aliasDefQuery, LINKS.where$e1s0), LINKS.condition$d94q), PROPS.textualCondition$n5ly) + String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(aliasDefQuery, LINKS.window$XLAN), PROPS.size$SW_U)));
      return _context.getOutputNodeByInputNodeAndMappingLabel((SNode) _context.getSessionObject(key), "SelectionActorBoxFromCondition");
    }
  }
  public static Object referenceMacro_GetReferent_7_0(final ReferenceMacroContext _context) {
    if ((SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).getElement(0), LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false) == null)) {
      String key = ((SLinkOperations.getTarget(_context.getNode(), LINKS.window$XLAN) == null) ? SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0), LINKS.condition$d94q), PROPS.textualCondition$n5ly) : SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0), LINKS.condition$d94q), PROPS.textualCondition$n5ly) + String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), LINKS.window$XLAN), PROPS.size$SW_U)));
      return _context.getOutputNodeByInputNodeAndMappingLabel((SNode) _context.getSessionObject(key), "SelectionActorBoxFromCondition");
    }
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "SelectionActorBox");
  }
  public static Object referenceMacro_GetReferent_7_1(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "ProjectionActorBox");
  }
  public static Object referenceMacro_GetReferent_7_2(final ReferenceMacroContext _context) {
    if ((SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).getElement(0), LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false) == null)) {
      String key = ((SLinkOperations.getTarget(_context.getNode(), LINKS.window$XLAN) == null) ? SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0), LINKS.condition$d94q), PROPS.textualCondition$n5ly) : SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0), LINKS.condition$d94q), PROPS.textualCondition$n5ly) + String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), LINKS.window$XLAN), PROPS.size$SW_U)));
      return _context.getOutputNodeByInputNodeAndMappingLabel((SNode) _context.getSessionObject(key), "SelectionActorBoxFromCondition");
    }
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "SelectionActorBox");
  }
  public static Object referenceMacro_GetReferent_7_3(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "GroupByActorBox");
  }
  public static Object referenceMacro_GetReferent_7_4(final ReferenceMacroContext _context) {
    if ((SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).getElement(0), LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false) == null)) {
      String key = ((SLinkOperations.getTarget(_context.getNode(), LINKS.window$XLAN) == null) ? SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0), LINKS.condition$d94q), PROPS.textualCondition$n5ly) : SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0), LINKS.condition$d94q), PROPS.textualCondition$n5ly) + String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), LINKS.window$XLAN), PROPS.size$SW_U)));
      return _context.getOutputNodeByInputNodeAndMappingLabel((SNode) _context.getSessionObject(key), "SelectionActorBoxFromCondition");
    }
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "SelectionActorBox");
  }
  public static Object referenceMacro_GetReferent_7_5(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "OrderByActorBox");
  }
  public static Object referenceMacro_GetReferent_7_6(final ReferenceMacroContext _context) {
    if ((SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).getElement(0), LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false) == null)) {
      String key = ((SLinkOperations.getTarget(_context.getNode(), LINKS.window$XLAN) == null) ? SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0), LINKS.condition$d94q), PROPS.textualCondition$n5ly) : SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0), LINKS.condition$d94q), PROPS.textualCondition$n5ly) + String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), LINKS.window$XLAN), PROPS.size$SW_U)));
      return _context.getOutputNodeByInputNodeAndMappingLabel((SNode) _context.getSessionObject(key), "SelectionActorBoxFromCondition");
    }
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "SelectionActorBox");
  }
  public static Object referenceMacro_GetReferent_7_7(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "AggregateFunctionActorBox");
  }
  public static Object referenceMacro_GetReferent_8_0(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "ProjectionActorBox");
  }
  public static Object referenceMacro_GetReferent_8_1(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "GroupByActorBox");
  }
  public static Object referenceMacro_GetReferent_8_2(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "ProjectionActorBox");
  }
  public static Object referenceMacro_GetReferent_8_3(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "OrderByActorBox");
  }
  public static Object referenceMacro_GetReferent_8_4(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "ProjectionActorBox");
  }
  public static Object referenceMacro_GetReferent_8_5(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "AggregateFunctionActorBox");
  }
  public static Object referenceMacro_GetReferent_9_0(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "GroupByActorBox");
  }
  public static Object referenceMacro_GetReferent_9_1(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "AggregateFunctionActorBox");
  }
  public static Object referenceMacro_GetReferent_9_2(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "GroupByActorBox");
  }
  public static Object referenceMacro_GetReferent_9_3(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "OrderByActorBox");
  }
  public static Object referenceMacro_GetReferent_10_0(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel((SNode) _context.getSessionObject(SPropertyOperations.getString(_context.getNode(), PROPS.textualCondition$n5ly)), "SelectionActorBox");
  }
  public static Object referenceMacro_GetReferent_10_1(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "JoinActorBox");
  }
  public static Object referenceMacro_GetReferent_11_0(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "JoinActorBox");
  }
  public static Object referenceMacro_GetReferent_11_1(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "ProjectionActorBox");
  }
  public static Object referenceMacro_GetReferent_11_2(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "JoinActorBox");
  }
  public static Object referenceMacro_GetReferent_11_3(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "GroupByActorBox");
  }
  public static Object referenceMacro_GetReferent_11_4(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "JoinActorBox");
  }
  public static Object referenceMacro_GetReferent_11_5(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "OrderByActorBox");
  }
  public static Object referenceMacro_GetReferent_11_6(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "JoinActorBox");
  }
  public static Object referenceMacro_GetReferent_11_7(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "AggregateFunctionActorBox");
  }
  public static Object referenceMacro_GetReferent_12_0(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), "JoinActorBox");
  }
  public static Object referenceMacro_GetReferent_12_1(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel((SNode) _context.getSessionObject(SPropertyOperations.getString(_context.getNode(), PROPS.textualCondition$n5ly)), "SelectionActorBoxFromCondition");
  }
  public static Object referenceMacro_GetReferent_12_2(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "AggregateFunctionActorBox");
  }
  public static Object referenceMacro_GetReferent_12_3(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "OrderByActorBox");
  }
  public static Object referenceMacro_GetReferent_13_0(final ReferenceMacroContext _context) {

    SNode aliasDefinitionQuery = SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(_context.getNode(), LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false);

    if ((aliasDefinitionQuery == null)) {
      // this is not an alias table
      return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Script$Rg, false, false), "DataSourceActorBox");
    }

    // this is an alias table
    if ((SLinkOperations.getTarget(aliasDefinitionQuery, LINKS.aggregateFunction$GMhu) != null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefinitionQuery, "AggregateFunctionActorBox");
    } else if ((SLinkOperations.getTarget(aliasDefinitionQuery, LINKS.orderBy$K96v) != null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefinitionQuery, "OrderByActorBox");
    } else if ((SLinkOperations.getTarget(aliasDefinitionQuery, LINKS.groupBy$vhgB) != null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefinitionQuery, "GroupByActorBox");
    } else if (!(Objects.equals(SNodeOperations.getConcept(ListSequence.fromList(SLinkOperations.getChildren(aliasDefinitionQuery, LINKS.cols$kMcM)).getElement(0)), CONCEPTS.AllColumns$eP))) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefinitionQuery, "ProjectionActorBox");
    } else {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefinitionQuery, "SelectionActorBox");
    }
  }
  public static Object referenceMacro_GetReferent_13_1(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), "JoinActorBox");
  }
  public static Object referenceMacro_GetReferent_13_2(final ReferenceMacroContext _context) {
    SNode aliasDefinitionQuery = SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(_context.getNode(), LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false);

    if ((aliasDefinitionQuery == null)) {
      // this is not an alias table
      return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Script$Rg, false, false), "DataSourceActorBox");
    }

    // this is an alias table
    if ((SLinkOperations.getTarget(aliasDefinitionQuery, LINKS.aggregateFunction$GMhu) != null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefinitionQuery, "AggregateFunctionActorBox");
    } else if ((SLinkOperations.getTarget(aliasDefinitionQuery, LINKS.orderBy$K96v) != null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefinitionQuery, "OrderByActorBox");
    } else if ((SLinkOperations.getTarget(aliasDefinitionQuery, LINKS.groupBy$vhgB) != null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefinitionQuery, "GroupByActorBox");
    } else if (!(Objects.equals(SNodeOperations.getConcept(ListSequence.fromList(SLinkOperations.getChildren(aliasDefinitionQuery, LINKS.cols$kMcM)).getElement(0)), CONCEPTS.AllColumns$eP))) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefinitionQuery, "ProjectionActorBox");
    } else {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefinitionQuery, "SelectionActorBox");
    }

  }
  public static Object referenceMacro_GetReferent_13_3(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), "JoinActorBox");
  }
  public static Object referenceMacro_GetReferent_14_0(final ReferenceMacroContext _context) {
    SNode aliasDefinitionQuery = SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(_context.getNode(), LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false);

    if ((aliasDefinitionQuery == null)) {
      // this is not an alias table
      return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Script$Rg, false, false), "DataSourceActorBox");
    }

    // this is an alias table

    if ((SLinkOperations.getTarget(aliasDefinitionQuery, LINKS.aggregateFunction$GMhu) != null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefinitionQuery, "AggregateFunctionActorBox");
    } else if ((SLinkOperations.getTarget(aliasDefinitionQuery, LINKS.orderBy$K96v) != null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefinitionQuery, "OrderByActorBox");
    } else if ((SLinkOperations.getTarget(aliasDefinitionQuery, LINKS.groupBy$vhgB) != null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefinitionQuery, "GroupByActorBox");
    } else if (!(Objects.equals(SNodeOperations.getConcept(ListSequence.fromList(SLinkOperations.getChildren(aliasDefinitionQuery, LINKS.cols$kMcM)).getElement(0)), CONCEPTS.AllColumns$eP))) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefinitionQuery, "ProjectionActorBox");
    } else {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefinitionQuery, "SelectionActorBox");
    }

  }
  public static Object referenceMacro_GetReferent_14_1(final ReferenceMacroContext _context) {
    final Wrappers._T<SNode> thisTableCondition = new Wrappers._T<SNode>(SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getInterfaceConcept(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x5eeb1b6c0699ea17L, "QueryLanguage.structure.Condition"))));
    SNode script = SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Script$Rg, false, false);
    List<SNode> allQueryConditions = Script__BehaviorDescriptor.findAllSingleTableConditions_id4BxYaol$2qr.invoke(script, SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), LINKS.where$e1s0), LINKS.condition$d94q));

    for (SNode condition : ListSequence.fromList(allQueryConditions)) {
      if (SLinkOperations.getTarget(_context.getNode(), LINKS.tableRef$boeY) == Script__BehaviorDescriptor.getTableFromCondition_id3lH3Hb9hrb6.invoke(script, condition)) {
        thisTableCondition.value = condition;
      }
    }

    SNode actorBox = _context.getOutputNodeByInputNodeAndMappingLabel(thisTableCondition.value, "SelectionActorBoxFromCondition");
    if ((actorBox != null)) {
      return actorBox;
    }
    for (SNode select : Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(script, LINKS.operations$az69), CONCEPTS.Select$Te)).where((it) -> new SNodeMatcher().match(SLinkOperations.getTarget(SLinkOperations.getTarget(it, LINKS.where$e1s0), LINKS.condition$d94q), thisTableCondition.value))) {
      actorBox = _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(SLinkOperations.getTarget(select, LINKS.where$e1s0), LINKS.condition$d94q), "SelectionActorBoxFromCondition");
      if ((actorBox != null)) {
        return actorBox;
      }
    }
    return null;
  }
  public static Object referenceMacro_GetReferent_14_2(final ReferenceMacroContext _context) {
    final Wrappers._T<SNode> thisTableCondition = new Wrappers._T<SNode>(SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getInterfaceConcept(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x5eeb1b6c0699ea17L, "QueryLanguage.structure.Condition"))));
    SNode script = SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Script$Rg, false, false);
    List<SNode> allQueryConditions = Script__BehaviorDescriptor.findAllSingleTableConditions_id4BxYaol$2qr.invoke(script, SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), LINKS.where$e1s0), LINKS.condition$d94q));

    for (SNode condition : ListSequence.fromList(allQueryConditions)) {
      if (SLinkOperations.getTarget(_context.getNode(), LINKS.tableRef$boeY) == Script__BehaviorDescriptor.getTableFromCondition_id3lH3Hb9hrb6.invoke(script, condition)) {
        thisTableCondition.value = condition;
      }
    }

    SNode actorBox = _context.getOutputNodeByInputNodeAndMappingLabel(thisTableCondition.value, "SelectionActorBoxFromCondition");
    if ((actorBox != null)) {
      return actorBox;
    }
    for (SNode select : Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(script, LINKS.operations$az69), CONCEPTS.Select$Te)).where((it) -> new SNodeMatcher().match(SLinkOperations.getTarget(SLinkOperations.getTarget(it, LINKS.where$e1s0), LINKS.condition$d94q), thisTableCondition.value))) {
      actorBox = _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(SLinkOperations.getTarget(select, LINKS.where$e1s0), LINKS.condition$d94q), "SelectionActorBoxFromCondition");
      if ((actorBox != null)) {
        return actorBox;
      }
    }
    return null;
  }
  public static Object referenceMacro_GetReferent_14_3(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), "JoinActorBox");
  }
  public static Object referenceMacro_GetReferent_15_0(final ReferenceMacroContext _context) {
    return ((SNode) _context.getVariable("msg"));
  }
  public static Object referenceMacro_GetReferent_15_1(final ReferenceMacroContext _context) {
    return ((SNode) _context.getVariable("msg"));
  }
  public static Object referenceMacro_GetReferent_15_2(final ReferenceMacroContext _context) {
    return ((SNode) _context.getVariable("msg"));
  }
  public static Object referenceMacro_GetReferent_15_3(final ReferenceMacroContext _context) {
    return ((SNode) _context.getVariable("msg"));
  }
  public static Object referenceMacro_GetReferent_15_4(final ReferenceMacroContext _context) {
    return ((SNode) _context.getVariable("msg"));
  }
  public static Object referenceMacro_GetReferent_17_0(final ReferenceMacroContext _context) {
    if ((SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).getElement(0), LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false) == null)) {
      String key = ((SLinkOperations.getTarget(_context.getNode(), LINKS.window$XLAN) == null) ? SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0), LINKS.condition$d94q), PROPS.textualCondition$n5ly) : SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0), LINKS.condition$d94q), PROPS.textualCondition$n5ly) + String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), LINKS.window$XLAN), PROPS.size$SW_U)));
      return _context.getOutputNodeByInputNodeAndMappingLabel((SNode) _context.getSessionObject(key), "SelectionActorBoxFromCondition");
    }
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "SelectionActorBox");
  }
  public static Object referenceMacro_GetReferent_17_1(final ReferenceMacroContext _context) {
    if ((SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).getElement(0), LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false) == null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel((SNode) _context.getSessionObject(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), LINKS.window$XLAN), PROPS.size$SW_U)), "WindowActorBox");
    }
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "WindowActorBox");
  }
  public static Object referenceMacro_GetReferent_17_2(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "ProjectionActorBox");
  }
  public static Object referenceMacro_GetReferent_17_3(final ReferenceMacroContext _context) {
    if ((SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).getElement(0), LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false) == null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel((SNode) _context.getSessionObject(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), LINKS.window$XLAN), PROPS.size$SW_U)), "WindowActorBox");
    }
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "WindowActorBox");
  }
  public static Object referenceMacro_GetReferent_17_4(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "GroupByActorBox");
  }
  public static Object referenceMacro_GetReferent_17_5(final ReferenceMacroContext _context) {
    if ((SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).getElement(0), LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false) == null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel((SNode) _context.getSessionObject(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), LINKS.window$XLAN), PROPS.size$SW_U)), "WindowActorBox");
    }
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "WindowActorBox");
  }
  public static Object referenceMacro_GetReferent_17_6(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "OrderByActorBox");
  }
  public static Object referenceMacro_GetReferent_17_7(final ReferenceMacroContext _context) {
    if ((SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).getElement(0), LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false) == null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel((SNode) _context.getSessionObject(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), LINKS.window$XLAN), PROPS.size$SW_U)), "WindowActorBox");
    }
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "WindowActorBox");
  }
  public static Object referenceMacro_GetReferent_17_8(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "AggregateFunctionActorBox");
  }
  public static Object referenceMacro_GetReferent_17_9(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel((SNode) _context.getSessionObject(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), LINKS.window$XLAN), PROPS.size$SW_U)), "WindowActorBox");
  }
  public static Object referenceMacro_GetReferent_18_0(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel((SNode) _context.getSessionObject(SPropertyOperations.getString(_context.getNode(), PROPS.textualCondition$n5ly)), "SelectionActorBoxFromCondition");
  }
  public static Object referenceMacro_GetReferent_18_1(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel((SNode) _context.getSessionObject(SPropertyOperations.getInteger(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), LINKS.window$XLAN), PROPS.size$SW_U)), "WindowActorBox");
  }
  public static Object referenceMacro_GetReferent_18_2(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "JoinActorBox");
  }
  public static Object referenceMacro_GetReferent_18_3(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel((SNode) _context.getSessionObject(SPropertyOperations.getInteger(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), LINKS.window$XLAN), PROPS.size$SW_U)), "WindowActorBox");
  }
  public static Object referenceMacro_GetReferent_19_0(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel((SNode) _context.getSessionObject(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), LINKS.window$XLAN), PROPS.size$SW_U)), "WindowActorBox");
  }
  public static Object referenceMacro_GetReferent_20_0(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel((SNode) _context.getSessionObject(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), LINKS.window$XLAN), PROPS.size$SW_U)), "WindowActorBox");
  }
  public static Object referenceMacro_GetReferent_21_0(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel((SNode) _context.getSessionObject(SPropertyOperations.getString(_context.getNode(), PROPS.textualCondition$n5ly)), "SelectionActorBoxFromCondition");
  }
  public static Object referenceMacro_GetReferent_21_1(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel((SNode) _context.getSessionObject(SPropertyOperations.getInteger(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), LINKS.window$XLAN), PROPS.size$SW_U)), "WindowActorBox");
  }
  public static Object referenceMacro_GetReferent_22_0(final ReferenceMacroContext _context) {
    if ((SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(_context.getNode(), LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false) == null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel((SNode) _context.getSessionObject(SPropertyOperations.getInteger(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), LINKS.window$XLAN), PROPS.size$SW_U)), "WindowActorBox");
    }
    return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), "WindowActorBox");
  }
  public static Object referenceMacro_GetReferent_22_1(final ReferenceMacroContext _context) {
    if ((SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(_context.getNode(), LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false) == null)) {
      SNode condition = (SNode) _context.getSessionObject(_context.getNode());
      return _context.getOutputNodeByInputNodeAndMappingLabel((SNode) _context.getSessionObject(SPropertyOperations.getString(condition, PROPS.textualCondition$n5ly)), "SelectionActorBoxFromCondition");
    }
    return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), "SelectionActorBox");
  }
  public static Object referenceMacro_GetReferent_22_2(final ReferenceMacroContext _context) {
    if ((SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(_context.getNode(), LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false) == null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel((SNode) _context.getSessionObject(SPropertyOperations.getInteger(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), LINKS.window$XLAN), PROPS.size$SW_U)), "WindowActorBox");
    }
    return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), "WindowActorBox");
  }
  public static Object referenceMacro_GetReferent_22_3(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), "JoinActorBox");
  }
  public static Object referenceMacro_GetReferent_23_0(final ReferenceMacroContext _context) {
    if ((SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(_context.getNode(), LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false) == null)) {
      SNode condition = (SNode) _context.getSessionObject(_context.getNode());
      return _context.getOutputNodeByInputNodeAndMappingLabel((SNode) _context.getSessionObject(SPropertyOperations.getString(condition, PROPS.textualCondition$n5ly)), "SelectionActorBoxFromCondition");
    }
    return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), "SelectionActorBox");
  }
  public static Object referenceMacro_GetReferent_23_1(final ReferenceMacroContext _context) {
    SNode aliasDefQuery = SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), LINKS.tables$IXdn)).getElement(SNodeOperations.getIndexInParent(_context.getNode())), LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false);
    if ((aliasDefQuery == null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Script$Rg, false, false), "DataSourceActorBox");
    }
    if ((ListSequence.fromList(SLinkOperations.getChildren(aliasDefQuery, LINKS.cols$kMcM)).findFirst((it) -> (SLinkOperations.getTarget(it, LINKS.aggregationFunction$8ryB) != null)) != null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefQuery, "AggregateFunctionActorBox");
    } else if ((SLinkOperations.getTarget(aliasDefQuery, LINKS.orderBy$K96v) != null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefQuery, "OrderByActorBox");
    } else if ((SLinkOperations.getTarget(aliasDefQuery, LINKS.groupBy$vhgB) != null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefQuery, "GroupByActorBox");
    } else if (!(Objects.equals(SLinkOperations.getChildren(aliasDefQuery, LINKS.cols$kMcM).get(0).getConcept(), CONCEPTS.AllColumns$eP))) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefQuery, "ProjectionActorBox");
    } else {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefQuery, "SelectionActorBox");
    }
  }
  public static Object referenceMacro_GetReferent_23_2(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), "JoinActorBox");
  }
  public static Object referenceMacro_GetReferent_23_3(final ReferenceMacroContext _context) {
    SNode aliasDefQuery = SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), LINKS.tables$IXdn)).getElement(SNodeOperations.getIndexInParent(_context.getNode())), LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false);
    if ((aliasDefQuery == null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Script$Rg, false, false), "DataSourceActorBox");
    }
    if ((ListSequence.fromList(SLinkOperations.getChildren(aliasDefQuery, LINKS.cols$kMcM)).findFirst((it) -> (SLinkOperations.getTarget(it, LINKS.aggregationFunction$8ryB) != null)) != null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefQuery, "AggregateFunctionActorBox");
    } else if ((SLinkOperations.getTarget(aliasDefQuery, LINKS.orderBy$K96v) != null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefQuery, "OrderByActorBox");
    } else if ((SLinkOperations.getTarget(aliasDefQuery, LINKS.groupBy$vhgB) != null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefQuery, "GroupByActorBox");
    } else if (!(Objects.equals(SLinkOperations.getChildren(aliasDefQuery, LINKS.cols$kMcM).get(0).getConcept(), CONCEPTS.AllColumns$eP))) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefQuery, "ProjectionActorBox");
    } else {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefQuery, "SelectionActorBox");
    }
  }
  public static Object referenceMacro_GetReferent_24_0(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), "WindowActorBox");
  }
  public static Object referenceMacro_GetReferent_24_1(final ReferenceMacroContext _context) {
    SNode aliasDefQuery = SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(_context.getNode(), LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false);
    if ((aliasDefQuery == null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Script$Rg, false, false), "DataSourceActorBox");
    }
    if ((SLinkOperations.getTarget(aliasDefQuery, LINKS.aggregateFunction$GMhu) != null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefQuery, "AggregateFunctionActorBox");
    } else if ((SLinkOperations.getTarget(aliasDefQuery, LINKS.orderBy$K96v) != null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefQuery, "OrderByActorBox");
    } else if ((SLinkOperations.getTarget(aliasDefQuery, LINKS.groupBy$vhgB) != null)) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefQuery, "GroupByActorBox");
    } else if (!(Objects.equals(SLinkOperations.getChildren(aliasDefQuery, LINKS.cols$kMcM).get(0).getConcept(), CONCEPTS.AllColumns$eP))) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefQuery, "ProjectionActorBox");
    } else {
      return _context.getOutputNodeByInputNodeAndMappingLabel(aliasDefQuery, "SelectionActorBox");
    }

  }
  public static Object referenceMacro_GetReferent_25_0(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "WindowActorBox");
  }
  public static Object referenceMacro_GetReferent_25_1(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "JoinActorBox");
  }
  public static Object referenceMacro_GetReferent_27_0(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "AggregateFunctionActorBox");
  }
  public static Object referenceMacro_GetReferent_27_1(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "OrderByActorBox");
  }
  public static Object referenceMacro_GetReferent_27_2(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), "JoinActorBox");
  }
  public static Object referenceMacro_GetReferent_27_3(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel((SNode) _context.getSessionObject(SPropertyOperations.getString(_context.getNode(), PROPS.textualCondition$n5ly)), "SelectionActorBoxFromCondition");
  }
  public static Object referenceMacro_GetReferent_27_4(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "AggregateFunctionActorBox");
  }
  public static Object referenceMacro_GetReferent_27_5(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "OrderByActorBox");
  }
  public static boolean ifMacro_Condition_1_0(final IfMacroContext _context) {
    if ((SLinkOperations.getTarget(_context.getNode(), LINKS.window$XLAN) != null) && (SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).getElement(0), LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false) == null) && !(MapSequence.fromMap(((Map<Integer, Boolean>) _context.getVariable("windowsMap"))).get(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), LINKS.window$XLAN), PROPS.size$SW_U)))) {
      _context.putSessionObject(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), LINKS.window$XLAN), PROPS.size$SW_U), _context.getNode());
      MapSequence.fromMap(((Map<Integer, Boolean>) _context.getVariable("windowsMap"))).put(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), LINKS.window$XLAN), PROPS.size$SW_U), true);
      return true;
    }
    return false;
  }
  public static boolean ifMacro_Condition_1_1(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.window$XLAN) != null) && (SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).getElement(0), LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false) != null);
  }
  public static boolean ifMacro_Condition_1_2(final IfMacroContext _context) {
    String key;
    if ((SLinkOperations.getTarget(_context.getNode(), LINKS.window$XLAN) == null)) {
      key = SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0), LINKS.condition$d94q), PROPS.textualCondition$n5ly);
    } else {
      key = SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0), LINKS.condition$d94q), PROPS.textualCondition$n5ly) + String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), LINKS.window$XLAN), PROPS.size$SW_U));
    }
    if (ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).count() == 1 && (SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0) != null) && (SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).getElement(0), LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false) == null) && !(MapSequence.fromMap(((Map<String, Boolean>) _context.getVariable("conditionsMap"))).get(key))) {
      _context.putSessionObject(key, SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0), LINKS.condition$d94q));
      MapSequence.fromMap(((Map<String, Boolean>) _context.getVariable("conditionsMap"))).put(key, true);
      return true;
    }
    return false;
  }
  public static boolean ifMacro_Condition_1_3(final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).count() == 1 && (SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0) != null) && (SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).getElement(0), LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false) != null);
  }
  public static boolean ifMacro_Condition_1_4(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.viewTable$4dXf) == null) && ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).count() > 1 && (SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0) != null);
  }
  public static boolean ifMacro_Condition_1_5(final IfMacroContext _context) {
    if (!(MapSequence.fromMap(((Map<String, Boolean>) _context.getVariable("conditionsMap"))).get(SPropertyOperations.getString(_context.getNode(), PROPS.textualCondition$n5ly))) && _context.getSessionObject(SPropertyOperations.getString(_context.getNode(), PROPS.textualCondition$n5ly)) == null) {
      _context.putSessionObject(SPropertyOperations.getString(_context.getNode(), PROPS.textualCondition$n5ly), _context.getNode());
      MapSequence.fromMap(((Map<String, Boolean>) _context.getVariable("conditionsMap"))).put(SPropertyOperations.getString(_context.getNode(), PROPS.textualCondition$n5ly), true);
      return true;
    }
    return false;
  }
  public static boolean ifMacro_Condition_1_6(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.viewTable$4dXf) != null) && ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).count() > 1 && (SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0) != null);
  }
  public static boolean ifMacro_Condition_1_7(final IfMacroContext _context) {
    return !(Objects.equals(SNodeOperations.getConcept(ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.cols$kMcM)).getElement(0)), CONCEPTS.AllColumns$eP));
  }
  public static boolean ifMacro_Condition_1_8(final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).count() > 1;
  }
  public static boolean ifMacro_Condition_1_9(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.groupBy$vhgB) != null);
  }
  public static boolean ifMacro_Condition_1_10(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.orderBy$K96v) != null);
  }
  public static boolean ifMacro_Condition_1_11(final IfMacroContext _context) {
    return (ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.cols$kMcM)).findFirst((it) -> (SLinkOperations.getTarget(it, LINKS.aggregationFunction$8ryB) != null)) != null);
  }
  public static boolean ifMacro_Condition_3_0(final IfMacroContext _context) {
    return !(Objects.equals(SNodeOperations.getConcept(ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.cols$kMcM)).getElement(0)), CONCEPTS.AllColumns$eP));
  }
  public static boolean ifMacro_Condition_3_1(final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).count() > 1;
  }
  public static boolean ifMacro_Condition_3_2(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.groupBy$vhgB) != null);
  }
  public static boolean ifMacro_Condition_3_3(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.orderBy$K96v) != null);
  }
  public static boolean ifMacro_Condition_3_4(final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.cols$kMcM)).any((it) -> (SLinkOperations.getTarget(it, LINKS.aggregationFunction$8ryB) != null));
  }
  public static boolean ifMacro_Condition_4_0(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.window$XLAN) == null);
  }
  public static boolean ifMacro_Condition_4_1(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.window$XLAN) != null);
  }
  public static boolean ifMacro_Condition_4_2(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0), LINKS.condition$d94q) != null);
  }
  public static boolean ifMacro_Condition_4_3(final IfMacroContext _context) {
    return !(Objects.equals(SNodeOperations.getConcept(ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.cols$kMcM)).getElement(0)), CONCEPTS.AllColumns$eP));
  }
  public static boolean ifMacro_Condition_4_4(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.groupBy$vhgB) != null);
  }
  public static boolean ifMacro_Condition_4_5(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.orderBy$K96v) != null) && (ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.cols$kMcM)).findFirst((it) -> (SLinkOperations.getTarget(it, LINKS.aggregationFunction$8ryB) != null)) != null);
  }
  public static boolean ifMacro_Condition_12_0(final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).where((it) -> (SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(it, LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false) != null)).isEmpty() && (SLinkOperations.getTarget(_context.getNode(), LINKS.window$XLAN) == null);
  }
  public static boolean ifMacro_Condition_12_1(final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).where((it) -> (SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(it, LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false) != null)).isNotEmpty();
  }
  public static boolean ifMacro_Condition_12_2(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.window$XLAN) != null);
  }
  public static boolean ifMacro_Condition_12_3(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0), LINKS.condition$d94q) != null) && ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).where((it) -> (SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(it, LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false) != null)).isEmpty();
  }
  public static boolean ifMacro_Condition_12_4(final IfMacroContext _context) {
    return !(Objects.equals(SNodeOperations.getConcept(ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.cols$kMcM)).getElement(0)), CONCEPTS.AllColumns$eP));
  }
  public static boolean ifMacro_Condition_12_5(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.groupBy$vhgB) != null);
  }
  public static boolean ifMacro_Condition_12_6(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.orderBy$K96v) != null) && (ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.cols$kMcM)).findFirst((it) -> (SLinkOperations.getTarget(it, LINKS.aggregationFunction$8ryB) != null)) != null);
  }
  public static boolean ifMacro_Condition_13_0(final IfMacroContext _context) {
    SNode script = SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Script$Rg, false, false);
    List<SNode> allQueryConditions = Script__BehaviorDescriptor.findAllSingleTableConditions_id4BxYaol$2qr.invoke(script, SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), LINKS.where$e1s0), LINKS.condition$d94q));

    for (SNode condition : ListSequence.fromList(allQueryConditions)) {
      if (SLinkOperations.getTarget(_context.getNode(), LINKS.tableRef$boeY) == Script__BehaviorDescriptor.getTableFromCondition_id3lH3Hb9hrb6.invoke(script, condition)) {
        return false;
      }
    }

    return true;
  }
  public static boolean ifMacro_Condition_13_1(final IfMacroContext _context) {
    SNode script = SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Script$Rg, false, false);
    List<SNode> allQueryConditions = Script__BehaviorDescriptor.findAllSingleTableConditions_id4BxYaol$2qr.invoke(script, SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Select$Te, false, false), LINKS.where$e1s0), LINKS.condition$d94q));

    for (SNode condition : ListSequence.fromList(allQueryConditions)) {
      if (SLinkOperations.getTarget(_context.getNode(), LINKS.tableRef$boeY) == Script__BehaviorDescriptor.getTableFromCondition_id3lH3Hb9hrb6.invoke(script, condition)) {
        return true;
      }
    }

    return false;
  }
  public static boolean ifMacro_Condition_27_0(final IfMacroContext _context) {
    _context.putSessionObject(SNodeOperations.getConcept(_context.getNode()).getName(), _context.getNode());
    return true;
  }
  public static boolean ifMacro_Condition_27_1(final IfMacroContext _context) {
    return (Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(_context.getNode(), LINKS.operations$az69), CONCEPTS.Select$Te)).findFirst((it) -> (SLinkOperations.getTarget(it, LINKS.groupBy$vhgB) != null)) != null);
  }
  public static boolean ifMacro_Condition_27_2(final IfMacroContext _context) {
    return (Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(_context.getNode(), LINKS.operations$az69), CONCEPTS.Select$Te)).findFirst((it) -> (SLinkOperations.getTarget(it, LINKS.orderBy$K96v) != null)) != null);
  }
  public static boolean ifMacro_Condition_27_3(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.window$XLAN) == null);
  }
  public static boolean ifMacro_Condition_27_4(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.window$XLAN) != null);
  }
  public static boolean ifMacro_Condition_27_5(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0), LINKS.condition$d94q) != null);
  }
  public static boolean ifMacro_Condition_27_6(final IfMacroContext _context) {
    return !(Objects.equals(SNodeOperations.getConcept(ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.cols$kMcM)).getElement(0)), CONCEPTS.AllColumns$eP));
  }
  public static boolean ifMacro_Condition_27_7(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.groupBy$vhgB) != null);
  }
  public static boolean ifMacro_Condition_27_8(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.orderBy$K96v) != null) && (ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.cols$kMcM)).findFirst((it) -> (SLinkOperations.getTarget(it, LINKS.aggregationFunction$8ryB) != null)) != null);
  }
  public static boolean ifMacro_Condition_27_9(final IfMacroContext _context) {
    if ((SLinkOperations.getTarget(_context.getNode(), LINKS.window$XLAN) != null) && (ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).findFirst((it) -> (SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(it, LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false) != null)) == null)) {
      return false;
    }
    for (SNode table : ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn))) {
      for (SNode condition : ListSequence.fromList(Script__BehaviorDescriptor.findAllSingleTableConditions_id4BxYaol$2qr.invoke(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Script$Rg, false, false), SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0), LINKS.condition$d94q)))) {
        if (Script__BehaviorDescriptor.getTableFromCondition_id3lH3Hb9hrb6.invoke(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Script$Rg, false, false), condition) == SLinkOperations.getTarget(table, LINKS.tableRef$boeY)) {
          _context.putSessionObject(table, condition);
        }
      }
    }
    return true;
  }
  public static boolean ifMacro_Condition_27_10(final IfMacroContext _context) {
    if ((SLinkOperations.getTarget(_context.getNode(), LINKS.window$XLAN) == null) || (ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).findFirst((it) -> (SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(it, LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false) != null)) != null)) {
      return false;
    }
    for (SNode table : ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn))) {
      for (SNode condition : ListSequence.fromList(Script__BehaviorDescriptor.findAllSingleTableConditions_id4BxYaol$2qr.invoke(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Script$Rg, false, false), SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0), LINKS.condition$d94q)))) {
        if (Script__BehaviorDescriptor.getTableFromCondition_id3lH3Hb9hrb6.invoke(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Script$Rg, false, false), condition) == SLinkOperations.getTarget(table, LINKS.tableRef$boeY)) {
          _context.putSessionObject(table, condition);
        }
      }
    }
    return true;
  }
  public static boolean ifMacro_Condition_27_11(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0), LINKS.condition$d94q) != null) && ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).where((it) -> (SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(it, LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false) != null)).isEmpty();
  }
  public static boolean ifMacro_Condition_27_12(final IfMacroContext _context) {
    return !((ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn)).findFirst((it) -> (SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(it, LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false) != null)) != null) && (SLinkOperations.getTarget(_context.getNode(), LINKS.window$XLAN) != null));
  }
  public static boolean ifMacro_Condition_27_13(final IfMacroContext _context) {
    return !(Objects.equals(SNodeOperations.getConcept(ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.cols$kMcM)).getElement(0)), CONCEPTS.AllColumns$eP));
  }
  public static boolean ifMacro_Condition_27_14(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.groupBy$vhgB) != null);
  }
  public static boolean ifMacro_Condition_27_15(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.orderBy$K96v) != null) && (ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.cols$kMcM)).findFirst((it) -> (SLinkOperations.getTarget(it, LINKS.aggregationFunction$8ryB) != null)) != null);
  }
  public static Iterable<SNode> sourceNodesQuery_1_0(final SourceSubstituteMacroNodesContext _context) {
    return (List<SNode>) Script__BehaviorDescriptor.findAllSingleTableConditions_id4BxYaol$2qr.invoke(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Script$Rg, false, false), SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0), LINKS.condition$d94q));
  }
  public static Iterable<SNode> sourceNodesQuery_1_1(final SourceSubstituteMacroNodesContext _context) {
    return (List<SNode>) Script__BehaviorDescriptor.findAllSingleTableConditions_id4BxYaol$2qr.invoke(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Script$Rg, false, false), SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0), LINKS.condition$d94q));
  }
  public static Iterable<SNode> sourceNodesQuery_10_0(final SourceSubstituteMacroNodesContext _context) {
    return (List<SNode>) Script__BehaviorDescriptor.findAllSingleTableConditions_id4BxYaol$2qr.invoke(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Script$Rg, false, false), SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0), LINKS.condition$d94q));
  }
  public static Iterable<SNode> sourceNodesQuery_12_0(final SourceSubstituteMacroNodesContext _context) {
    return (List<SNode>) Script__BehaviorDescriptor.findAllSingleTableConditions_id4BxYaol$2qr.invoke(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Script$Rg, false, false), SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0), LINKS.condition$d94q));
  }
  public static Iterable<SNode> sourceNodesQuery_13_0(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn);
  }
  public static Iterable<SNode> sourceNodesQuery_13_1(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn);
  }
  public static Iterable<SNode> sourceNodesQuery_18_0(final SourceSubstituteMacroNodesContext _context) {
    return (List<SNode>) Script__BehaviorDescriptor.findAllSingleTableConditions_id4BxYaol$2qr.invoke(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Script$Rg, false, false), SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0), LINKS.condition$d94q));
  }
  public static Iterable<SNode> sourceNodesQuery_27_0(final SourceSubstituteMacroNodesContext _context) {

    List<SNode> conditions = ListSequence.fromList(new ArrayList<SNode>());
    List<SNode> selects = ListSequence.fromList(new ArrayList<SNode>());

    for (final SNode select : Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(_context.getNode(), LINKS.operations$az69), CONCEPTS.Select$Te))) {
      if ((SLinkOperations.getTarget(select, LINKS.where$e1s0) != null)) {
        if (ListSequence.fromList(SLinkOperations.getChildren(select, LINKS.tables$IXdn)).count() > 1) {
          // joined tables
          List<SNode> singleTableConditions = Script__BehaviorDescriptor.findAllSingleTableConditions_id4BxYaol$2qr.invoke(_context.getNode(), SLinkOperations.getTarget(SLinkOperations.getTarget(select, LINKS.where$e1s0), LINKS.condition$d94q));
          for (final SNode condition : ListSequence.fromList(singleTableConditions)) {
            if (!(ListSequence.fromList(conditions).any((it) -> new SNodeMatcher().match(it, condition))) || (SLinkOperations.getTarget(select, LINKS.viewTable$4dXf) != null)) {
              ListSequence.fromList(conditions).addElement(condition);
              ListSequence.fromList(selects).addElement(select);
            }
          }
        } else {
          if ((!(ListSequence.fromList(conditions).any((it) -> new SNodeMatcher().match(it, SLinkOperations.getTarget(SLinkOperations.getTarget(select, LINKS.where$e1s0), LINKS.condition$d94q)))) || (ListSequence.fromList(selects).findFirst((it) -> new SNodeMatcher().match(SLinkOperations.getTarget(SLinkOperations.getTarget(it, LINKS.where$e1s0), LINKS.condition$d94q), SLinkOperations.getTarget(SLinkOperations.getTarget(select, LINKS.where$e1s0), LINKS.condition$d94q)) && SPropertyOperations.getInteger(SLinkOperations.getTarget(it, LINKS.window$XLAN), PROPS.size$SW_U) != SPropertyOperations.getInteger(SLinkOperations.getTarget(select, LINKS.window$XLAN), PROPS.size$SW_U)) != null)) || (SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getChildren(select, LINKS.tables$IXdn)).getElement(0), LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false) != null)) {
            ListSequence.fromList(conditions).addElement(SLinkOperations.getTarget(SLinkOperations.getTarget(select, LINKS.where$e1s0), LINKS.condition$d94q));
            ListSequence.fromList(selects).addElement(select);
          }
        }

      }

    }

    return selects;
  }
  public static Iterable<SNode> sourceNodesQuery_27_1(final SourceSubstituteMacroNodesContext _context) {
    List<Integer> windowSizes = ListSequence.fromList(new ArrayList<Integer>());
    List<SNode> windowQueries = new ArrayList<SNode>();
    for (SNode select : Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(_context.getNode(), LINKS.operations$az69), CONCEPTS.Select$Te))) {
      if ((SLinkOperations.getTarget(select, LINKS.window$XLAN) != null) && (!(ListSequence.fromList(windowSizes).contains(SPropertyOperations.getInteger(SLinkOperations.getTarget(select, LINKS.window$XLAN), PROPS.size$SW_U))) || (SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getChildren(select, LINKS.tables$IXdn)).getElement(0), LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false) != null))) {
        if ((SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getChildren(select, LINKS.tables$IXdn)).getElement(0), LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false) == null)) {
          ListSequence.fromList(windowSizes).addElement(SPropertyOperations.getInteger(SLinkOperations.getTarget(select, LINKS.window$XLAN), PROPS.size$SW_U));
        }
        ListSequence.fromList(windowQueries).addElement(select);
      }
    }
    return windowQueries;
  }
  public static Iterable<SNode> sourceNodesQuery_27_2(final SourceSubstituteMacroNodesContext _context) {
    return SNodeOperations.ofConcept(SLinkOperations.getChildren(_context.getNode(), LINKS.operations$az69), CONCEPTS.Select$Te);
  }
  public static Iterable<SNode> sourceNodesQuery_27_3(final SourceSubstituteMacroNodesContext _context) {
    List<SNode> aggregateFunctions = ListSequence.fromList(new ArrayList<SNode>());
    for (SNode select : Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(_context.getNode(), LINKS.operations$az69), CONCEPTS.Select$Te))) {
      for (final SNode col : ListSequence.fromList(SLinkOperations.getChildren(select, LINKS.cols$kMcM))) {
        if ((SLinkOperations.getTarget(col, LINKS.aggregationFunction$8ryB) != null) && (ListSequence.fromList(aggregateFunctions).findFirst((it) -> Objects.equals(SNodeOperations.getConcept(it), SNodeOperations.getConcept(SLinkOperations.getTarget(col, LINKS.aggregationFunction$8ryB)))) == null)) {
          ListSequence.fromList(aggregateFunctions).addElement(SLinkOperations.getTarget(col, LINKS.aggregationFunction$8ryB));
        }
      }
    }
    return aggregateFunctions;
  }
  public static Iterable<SNode> sourceNodesQuery_27_4(final SourceSubstituteMacroNodesContext _context) {
    List<SNode> selects = new ArrayList<SNode>();
    List<Integer> sizes = ListSequence.fromList(new ArrayList<Integer>());
    for (SNode select : Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(_context.getNode(), LINKS.operations$az69), CONCEPTS.Select$Te))) {
      if ((SLinkOperations.getTarget(select, LINKS.window$XLAN) != null) && !(ListSequence.fromList(sizes).contains(SPropertyOperations.getInteger(SLinkOperations.getTarget(select, LINKS.window$XLAN), PROPS.size$SW_U))) && (ListSequence.fromList(SLinkOperations.getChildren(select, LINKS.tables$IXdn)).findFirst((it) -> (SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(it, LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false) != null)) == null)) {
        ListSequence.fromList(selects).addElement(select);
        ListSequence.fromList(sizes).addElement(SPropertyOperations.getInteger(SLinkOperations.getTarget(select, LINKS.window$XLAN), PROPS.size$SW_U));
      }
    }
    return selects;
  }
  public static Iterable<SNode> sourceNodesQuery_27_5(final SourceSubstituteMacroNodesContext _context) {
    List<SNode> selects = new ArrayList<SNode>();
    for (SNode select : Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(_context.getNode(), LINKS.operations$az69), CONCEPTS.Select$Te))) {
      if ((SLinkOperations.getTarget(select, LINKS.window$XLAN) != null) && ListSequence.fromList(SLinkOperations.getChildren(select, LINKS.tables$IXdn)).count() == 1 && (ListSequence.fromList(SLinkOperations.getChildren(select, LINKS.tables$IXdn)).findFirst((it) -> (SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(it, LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false) != null)) != null)) {
        ListSequence.fromList(selects).addElement(select);
      }
    }
    return selects;
  }
  public static Iterable<SNode> sourceNodesQuery_27_6(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn);
  }
  public static Iterable<SNode> sourceNodesQuery_27_7(final SourceSubstituteMacroNodesContext _context) {
    List<SNode> selects = new ArrayList<SNode>();
    for (SNode select : Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(_context.getNode(), LINKS.operations$az69), CONCEPTS.Select$Te))) {
      if ((SLinkOperations.getTarget(select, LINKS.window$XLAN) != null) && ListSequence.fromList(SLinkOperations.getChildren(select, LINKS.tables$IXdn)).count() > 1 && (ListSequence.fromList(SLinkOperations.getChildren(select, LINKS.tables$IXdn)).findFirst((it) -> (SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(it, LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false) != null)) != null)) {
        ListSequence.fromList(selects).addElement(select);
      }
    }
    return selects;
  }
  public static Iterable<SNode> sourceNodesQuery_27_8(final SourceSubstituteMacroNodesContext _context) {
    List<SNode> selects = new ArrayList<SNode>();
    for (final SNode select : Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(_context.getNode(), LINKS.operations$az69), CONCEPTS.Select$Te)).where((it) -> ListSequence.fromList(SLinkOperations.getChildren(it, LINKS.tables$IXdn)).count() == 1)) {
      if ((SLinkOperations.getTarget(SLinkOperations.getTarget(select, LINKS.where$e1s0), LINKS.condition$d94q) == null) || ((SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getChildren(select, LINKS.tables$IXdn)).getElement(0), LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false) == null) && (ListSequence.fromList(selects).findFirst((it) -> (SLinkOperations.getTarget(it, LINKS.where$e1s0) != null) && SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(it, LINKS.where$e1s0), LINKS.condition$d94q), PROPS.textualCondition$n5ly).equals(SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(select, LINKS.where$e1s0), LINKS.condition$d94q), PROPS.textualCondition$n5ly))) == null)) || (SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getChildren(select, LINKS.tables$IXdn)).getElement(0), LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false) != null)) {
        ListSequence.fromList(selects).addElement(select);
      }
    }
    return selects;
  }
  public static Iterable<SNode> sourceNodesQuery_27_9(final SourceSubstituteMacroNodesContext _context) {
    return Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(_context.getNode(), LINKS.operations$az69), CONCEPTS.Select$Te)).where((it) -> ListSequence.fromList(SLinkOperations.getChildren(it, LINKS.tables$IXdn)).count() == 1);
  }
  public static Iterable<SNode> sourceNodesQuery_27_10(final SourceSubstituteMacroNodesContext _context) {
    return Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(_context.getNode(), LINKS.operations$az69), CONCEPTS.Select$Te)).where((it) -> ListSequence.fromList(SLinkOperations.getChildren(it, LINKS.tables$IXdn)).count() == 1);
  }
  public static Iterable<SNode> sourceNodesQuery_27_11(final SourceSubstituteMacroNodesContext _context) {
    return Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(_context.getNode(), LINKS.operations$az69), CONCEPTS.Select$Te)).where((it) -> ListSequence.fromList(SLinkOperations.getChildren(it, LINKS.tables$IXdn)).count() == 1);
  }
  public static Iterable<SNode> sourceNodesQuery_27_12(final SourceSubstituteMacroNodesContext _context) {
    return Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(_context.getNode(), LINKS.operations$az69), CONCEPTS.Select$Te)).where((it) -> ListSequence.fromList(SLinkOperations.getChildren(it, LINKS.tables$IXdn)).count() == 1);
  }
  public static Iterable<SNode> sourceNodesQuery_27_13(final SourceSubstituteMacroNodesContext _context) {
    return Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(_context.getNode(), LINKS.operations$az69), CONCEPTS.Select$Te)).where((it) -> ListSequence.fromList(SLinkOperations.getChildren(it, LINKS.tables$IXdn)).count() == 1);
  }
  public static Iterable<SNode> sourceNodesQuery_27_14(final SourceSubstituteMacroNodesContext _context) {
    return Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(_context.getNode(), LINKS.operations$az69), CONCEPTS.Select$Te)).where((it) -> ListSequence.fromList(SLinkOperations.getChildren(it, LINKS.tables$IXdn)).count() > 1);
  }
  public static Iterable<SNode> sourceNodesQuery_27_15(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn);
  }
  public static Iterable<SNode> sourceNodesQuery_27_16(final SourceSubstituteMacroNodesContext _context) {
    return Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(_context.getNode(), LINKS.operations$az69), CONCEPTS.Select$Te)).where((it) -> ListSequence.fromList(SLinkOperations.getChildren(it, LINKS.tables$IXdn)).count() > 1);
  }
  public static Iterable<SNode> sourceNodesQuery_27_17(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.tables$IXdn);
  }
  public static Iterable<SNode> sourceNodesQuery_27_18(final SourceSubstituteMacroNodesContext _context) {
    return Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(_context.getNode(), LINKS.operations$az69), CONCEPTS.Select$Te)).where((it) -> ListSequence.fromList(SLinkOperations.getChildren(it, LINKS.tables$IXdn)).count() > 1);
  }
  public static Iterable<SNode> sourceNodesQuery_27_19(final SourceSubstituteMacroNodesContext _context) {
    return (List<SNode>) Script__BehaviorDescriptor.findAllSingleTableConditions_id4BxYaol$2qr.invoke(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Script$Rg, false, false), SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0), LINKS.condition$d94q));
  }
  public static Iterable<SNode> sourceNodesQuery_27_20(final SourceSubstituteMacroNodesContext _context) {
    return Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(_context.getNode(), LINKS.operations$az69), CONCEPTS.Select$Te)).where((it) -> ListSequence.fromList(SLinkOperations.getChildren(it, LINKS.tables$IXdn)).count() > 1);
  }
  public static Iterable<SNode> sourceNodesQuery_27_21(final SourceSubstituteMacroNodesContext _context) {
    return Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(_context.getNode(), LINKS.operations$az69), CONCEPTS.Select$Te)).where((it) -> ListSequence.fromList(SLinkOperations.getChildren(it, LINKS.tables$IXdn)).count() > 1 && (ListSequence.fromList(SLinkOperations.getChildren(it, LINKS.tables$IXdn)).findFirst((table) -> (SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(table, LINKS.tableRef$boeY), CONCEPTS.Select$Te, false, false) != null)) != null));
  }
  public static Iterable<SNode> sourceNodesQuery_27_22(final SourceSubstituteMacroNodesContext _context) {
    return Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(_context.getNode(), LINKS.operations$az69), CONCEPTS.Select$Te)).where((it) -> ListSequence.fromList(SLinkOperations.getChildren(it, LINKS.tables$IXdn)).count() > 1);
  }
  public static Iterable<SNode> sourceNodesQuery_27_23(final SourceSubstituteMacroNodesContext _context) {
    return Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(_context.getNode(), LINKS.operations$az69), CONCEPTS.Select$Te)).where((it) -> ListSequence.fromList(SLinkOperations.getChildren(it, LINKS.tables$IXdn)).count() > 1);
  }
  public static Iterable<SNode> sourceNodesQuery_27_24(final SourceSubstituteMacroNodesContext _context) {
    return Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(_context.getNode(), LINKS.operations$az69), CONCEPTS.Select$Te)).where((it) -> ListSequence.fromList(SLinkOperations.getChildren(it, LINKS.tables$IXdn)).count() > 1);
  }
  public static Iterable<SNode> sourceNodesQuery_27_25(final SourceSubstituteMacroNodesContext _context) {
    return SNodeOperations.ofConcept(SLinkOperations.getChildren(_context.getNode(), LINKS.operations$az69), CONCEPTS.Select$Te);
  }
  public static void mappingScript_CodeBlock_6(final MappingScriptContext _context) {
    for (SNode simpleCondition : ListSequence.fromList(SModelOperations.nodes(_context.getModel(), CONCEPTS.SimpleCondition$89))) {
      SPropertyOperations.assign(simpleCondition, PROPS.textualCondition$n5ly, SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(simpleCondition, LINKS.column$Aee5), LINKS.column$Wyeu), PROPS.name$MnvL) + " " + SPropertyOperations.getEnum(simpleCondition, PROPS.operator$A7DD) + " " + SPropertyOperations.getString(SLinkOperations.getTarget(simpleCondition, LINKS.value$Ad30), PROPS.value$RF4w));
    }
    for (SNode multipleCondition : ListSequence.fromList(SModelOperations.nodes(_context.getModel(), CONCEPTS.MultipleCondition$9A))) {
      MultipleCondition__BehaviorDescriptor.setMultipleConditionString_id6w4sAgfAEwn.invoke(multipleCondition);
    }

    for (SNode window : ListSequence.fromList(SModelOperations.nodes(_context.getModel(), CONCEPTS.Window$_o))) {
      switch (enumSwitchIndex.indexNullable(SPropertyOperations.getEnum(window, PROPS.temporalUnit$aopO))) {
        case 0:
          SPropertyOperations.assign(window, PROPS.size$SW_U, SPropertyOperations.getInteger(window, PROPS.size$SW_U) * 60);
          break;
        case 1:
          SPropertyOperations.assign(window, PROPS.size$SW_U, SPropertyOperations.getInteger(window, PROPS.size$SW_U) * 60 * 60);
          break;
        case 2:
          SPropertyOperations.assign(window, PROPS.size$SW_U, SPropertyOperations.getInteger(window, PROPS.size$SW_U) * 60 * 60 * 24);
          break;
        case 3:
          SPropertyOperations.assign(window, PROPS.size$SW_U, SPropertyOperations.getInteger(window, PROPS.size$SW_U) * 60 * 60 * 24 * 7);
          break;
        case 4:
          SPropertyOperations.assign(window, PROPS.size$SW_U, SPropertyOperations.getInteger(window, PROPS.size$SW_U) * 60 * 60 * 24 * 30);
          break;
        case 5:
          SPropertyOperations.assign(window, PROPS.size$SW_U, SPropertyOperations.getInteger(window, PROPS.size$SW_U) * 60 * 60 * 24 * 365);
          break;
      }
    }
  }
  public static void mappingScript_CodeBlock_16(final MappingScriptContext _context) {
    int count = 1;
    for (SNode actor : ListSequence.fromList(SModelOperations.nodes(_context.getModel(), CONCEPTS.CreateActor$Uv))) {
      if (SPropertyOperations.getString(SLinkOperations.getTarget(actor, LINKS.behavior$QgnL), PROPS.name$MnvL).equals("DataSource")) {
        SPropertyOperations.assign(actor, PROPS.address$DqJ_, 0);
      } else {
        SPropertyOperations.assign(actor, PROPS.address$DqJ_, count++);
      }
    }
  }
  public static Object varMacro_Value_27_0(final TemplateVarContext _context) {
    Map<String, Boolean> conditionsMap = MapSequence.fromMap(new HashMap<String, Boolean>());
    for (SNode select : Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(_context.getNode(), LINKS.operations$az69), CONCEPTS.Select$Te))) {
      if (ListSequence.fromList(SLinkOperations.getChildren(select, LINKS.tables$IXdn)).count() > 1) {
        for (SNode condition : ListSequence.fromList(Script__BehaviorDescriptor.findAllSingleTableConditions_id4BxYaol$2qr.invoke(_context.getNode(), SLinkOperations.getTarget(SLinkOperations.getTarget(select, LINKS.where$e1s0), LINKS.condition$d94q)))) {
          MapSequence.fromMap(conditionsMap).put(SPropertyOperations.getString(condition, PROPS.textualCondition$n5ly), false);
        }
      } else {
        String key;
        if ((SLinkOperations.getTarget(select, LINKS.window$XLAN) == null)) {
          key = SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(select, LINKS.where$e1s0), LINKS.condition$d94q), PROPS.textualCondition$n5ly);
        } else {
          key = SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(select, LINKS.where$e1s0), LINKS.condition$d94q), PROPS.textualCondition$n5ly) + String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(select, LINKS.window$XLAN), PROPS.size$SW_U));
        }
        if (!(MapSequence.fromMap(conditionsMap).containsKey(key))) {
          MapSequence.fromMap(conditionsMap).put(key, false);
        }
      }
    }
    return conditionsMap;
  }
  public static Object varMacro_Value_27_1(final TemplateVarContext _context) {
    Map<Integer, Boolean> windows = MapSequence.fromMap(new HashMap<Integer, Boolean>());
    List<Integer> sizes = ListSequence.fromList(new ArrayList<Integer>());
    for (SNode select : Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(_context.getNode(), LINKS.operations$az69), CONCEPTS.Select$Te))) {
      if ((SLinkOperations.getTarget(select, LINKS.window$XLAN) != null) && !(ListSequence.fromList(sizes).contains(SPropertyOperations.getInteger(SLinkOperations.getTarget(select, LINKS.window$XLAN), PROPS.size$SW_U)))) {
        ListSequence.fromList(sizes).addElement(SPropertyOperations.getInteger(SLinkOperations.getTarget(select, LINKS.window$XLAN), PROPS.size$SW_U));
        MapSequence.fromMap(windows).put(SPropertyOperations.getInteger(SLinkOperations.getTarget(select, LINKS.window$XLAN), PROPS.size$SW_U), false);
      }
    }
    return windows;
  }
  public static SNode labelMapNode1_0(final TemplateQueryContext _context) {
    return SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.where$e1s0), LINKS.condition$d94q);
  }
  private final Map<String, ReductionRuleCondition> rrcMethods = new HashMap<String, ReductionRuleCondition>();
  {
    int i = 0;
    rrcMethods.put("2942082050237362634", new RRC(i++));
    rrcMethods.put("2942082050237375201", new RRC(i++));
    rrcMethods.put("2942082050237386837", new RRC(i++));
    rrcMethods.put("2942082050237394085", new RRC(i++));
    rrcMethods.put("2942082050237401426", new RRC(i++));
    rrcMethods.put("2942082050239461039", new RRC(i++));
    rrcMethods.put("2942082050239505169", new RRC(i++));
    rrcMethods.put("2942082050239506902", new RRC(i++));
    rrcMethods.put("2942082050239508357", new RRC(i++));
    rrcMethods.put("2942082050240019032", new RRC(i++));
    rrcMethods.put("2942082050240007348", new RRC(i++));
    rrcMethods.put("2942082050240020842", new RRC(i++));
    rrcMethods.put("2942082050240030500", new RRC(i++));
    rrcMethods.put("2942082050240042478", new RRC(i++));
    rrcMethods.put("8619478032122580195", new RRC(i++));
    rrcMethods.put("1404468460816780587", new RRC(i++));
    rrcMethods.put("1404468460816789191", new RRC(i++));
    rrcMethods.put("1404468460816839082", new RRC(i++));
    rrcMethods.put("1404468460816843650", new RRC(i++));
    rrcMethods.put("1404468460816845979", new RRC(i++));
    rrcMethods.put("622446679693505961", new RRC(i++));
    rrcMethods.put("4614575099525927197", new RRC(i++));
    rrcMethods.put("2340268240440328203", new RRC(i++));
    rrcMethods.put("2340268240440349159", new RRC(i++));
    rrcMethods.put("2340268240440379803", new RRC(i++));
    rrcMethods.put("2340268240440405473", new RRC(i++));
    rrcMethods.put("2340268240440433361", new RRC(i++));
    rrcMethods.put("2340268240456070529", new RRC(i++));
    rrcMethods.put("2340268240456083302", new RRC(i++));
    rrcMethods.put("6667543392284745180", new RRC(i++));
    rrcMethods.put("6667543392283440614", new RRC(i++));
    rrcMethods.put("6649776843764623286", new RRC(i++));
    rrcMethods.put("6649776843764628747", new RRC(i++));
    rrcMethods.put("5818081797707619176", new RRC(i++));
    rrcMethods.put("5818081797707686960", new RRC(i++));
    rrcMethods.put("5818081797707701013", new RRC(i++));
    rrcMethods.put("5818081797707705680", new RRC(i++));
    rrcMethods.put("5818081797707707796", new RRC(i++));
  }
  @Override
  @NotNull
  public ReductionRuleCondition getReductionRuleCondition(@NotNull QueryKey identity) {
    ReductionRuleCondition query = identity.forTemplateNode(rrcMethods);
    return (query != null ? query : super.getReductionRuleCondition(identity));
  }
  private static class RRC implements ReductionRuleCondition {
    private final int methodKey;
    public RRC(int methodKey) {
      this.methodKey = methodKey;
    }
    @Override
    public boolean check(ReductionRuleQueryContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.rule_Condition_5_0(ctx);
        case 1:
          return QueriesGenerated.rule_Condition_5_1(ctx);
        case 2:
          return QueriesGenerated.rule_Condition_5_2(ctx);
        case 3:
          return QueriesGenerated.rule_Condition_5_3(ctx);
        case 4:
          return QueriesGenerated.rule_Condition_5_4(ctx);
        case 5:
          return QueriesGenerated.rule_Condition_7_0(ctx);
        case 6:
          return QueriesGenerated.rule_Condition_7_1(ctx);
        case 7:
          return QueriesGenerated.rule_Condition_7_2(ctx);
        case 8:
          return QueriesGenerated.rule_Condition_7_3(ctx);
        case 9:
          return QueriesGenerated.rule_Condition_8_0(ctx);
        case 10:
          return QueriesGenerated.rule_Condition_8_1(ctx);
        case 11:
          return QueriesGenerated.rule_Condition_8_2(ctx);
        case 12:
          return QueriesGenerated.rule_Condition_9_0(ctx);
        case 13:
          return QueriesGenerated.rule_Condition_9_1(ctx);
        case 14:
          return QueriesGenerated.rule_Condition_10_0(ctx);
        case 15:
          return QueriesGenerated.rule_Condition_10_1(ctx);
        case 16:
          return QueriesGenerated.rule_Condition_11_0(ctx);
        case 17:
          return QueriesGenerated.rule_Condition_11_1(ctx);
        case 18:
          return QueriesGenerated.rule_Condition_11_2(ctx);
        case 19:
          return QueriesGenerated.rule_Condition_11_3(ctx);
        case 20:
          return QueriesGenerated.rule_Condition_13_0(ctx);
        case 21:
          return QueriesGenerated.rule_Condition_13_1(ctx);
        case 22:
          return QueriesGenerated.rule_Condition_17_0(ctx);
        case 23:
          return QueriesGenerated.rule_Condition_17_1(ctx);
        case 24:
          return QueriesGenerated.rule_Condition_17_2(ctx);
        case 25:
          return QueriesGenerated.rule_Condition_17_3(ctx);
        case 26:
          return QueriesGenerated.rule_Condition_17_4(ctx);
        case 27:
          return QueriesGenerated.rule_Condition_18_0(ctx);
        case 28:
          return QueriesGenerated.rule_Condition_18_1(ctx);
        case 29:
          return QueriesGenerated.rule_Condition_22_0(ctx);
        case 30:
          return QueriesGenerated.rule_Condition_22_1(ctx);
        case 31:
          return QueriesGenerated.rule_Condition_23_0(ctx);
        case 32:
          return QueriesGenerated.rule_Condition_23_1(ctx);
        case 33:
          return QueriesGenerated.rule_Condition_26_0(ctx);
        case 34:
          return QueriesGenerated.rule_Condition_26_1(ctx);
        case 35:
          return QueriesGenerated.rule_Condition_26_2(ctx);
        case 36:
          return QueriesGenerated.rule_Condition_26_3(ctx);
        case 37:
          return QueriesGenerated.rule_Condition_26_4(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no condition method for rule %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, ScriptCodeBlock> mscbMethods = new HashMap<String, ScriptCodeBlock>();
  {
    int i = 0;
    mscbMethods.put("1455449051929537877", new SCB(i++));
    mscbMethods.put("2233974986207239173", new SCB(i++));
  }
  @Override
  @NotNull
  public ScriptCodeBlock getScriptCodeBlock(@NotNull QueryKey identity) {
    ScriptCodeBlock query = identity.forTemplateNode(mscbMethods);
    return (query != null ? query : super.getScriptCodeBlock(identity));
  }
  private static class SCB implements ScriptCodeBlock {
    private final int methodKey;
    public SCB(int methodKey) {
      this.methodKey = methodKey;
    }
    @Override
    public void invoke(MappingScriptContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          QueriesGenerated.mappingScript_CodeBlock_6(ctx);
          return;
        case 1:
          QueriesGenerated.mappingScript_CodeBlock_16(ctx);
          return;
        default:
          throw new GenerationFailureException(String.format("There's no code block with method index %d ", methodKey));
      }
    }
  }
  private final Map<String, SourceNodesQuery> snsqMethods = new HashMap<String, SourceNodesQuery>();
  {
    int i = 0;
    snsqMethods.put("3336533897854432983", new SNsQ(i++));
    snsqMethods.put("1695491561994974430", new SNsQ(i++));
    snsqMethods.put("8619478032122605395", new SNsQ(i++));
    snsqMethods.put("622446679667223601", new SNsQ(i++));
    snsqMethods.put("622446679693549378", new SNsQ(i++));
    snsqMethods.put("4614575099526000285", new SNsQ(i++));
    snsqMethods.put("2340268240456070534", new SNsQ(i++));
    snsqMethods.put("7824142728414925415", new SNsQ(i++));
    snsqMethods.put("4235273330103004263", new SNsQ(i++));
    snsqMethods.put("2171626095253891828", new SNsQ(i++));
    snsqMethods.put("3481690752606743209", new SNsQ(i++));
    snsqMethods.put("4448233057882821445", new SNsQ(i++));
    snsqMethods.put("1695491562012743032", new SNsQ(i++));
    snsqMethods.put("1695491562012837009", new SNsQ(i++));
    snsqMethods.put("2494517925624590925", new SNsQ(i++));
    snsqMethods.put("4448233057882957677", new SNsQ(i++));
    snsqMethods.put("4448233057883062893", new SNsQ(i++));
    snsqMethods.put("4448233057883134649", new SNsQ(i++));
    snsqMethods.put("4448233057883281175", new SNsQ(i++));
    snsqMethods.put("4448233057883289741", new SNsQ(i++));
    snsqMethods.put("4448233057883305380", new SNsQ(i++));
    snsqMethods.put("6649776843764536227", new SNsQ(i++));
    snsqMethods.put("6649776843764511371", new SNsQ(i++));
    snsqMethods.put("64837629271814951", new SNsQ(i++));
    snsqMethods.put("6667543392280542975", new SNsQ(i++));
    snsqMethods.put("6667543392294932026", new SNsQ(i++));
    snsqMethods.put("6667543392294885019", new SNsQ(i++));
    snsqMethods.put("4448233057883899292", new SNsQ(i++));
    snsqMethods.put("2494517925632525194", new SNsQ(i++));
    snsqMethods.put("4448233057883906804", new SNsQ(i++));
    snsqMethods.put("4448233057883916870", new SNsQ(i++));
    snsqMethods.put("4448233057883941406", new SNsQ(i++));
    snsqMethods.put("3849749554957269401", new SNsQ(i++));
  }
  @NotNull
  @Override
  public SourceNodesQuery getSourceNodesQuery(@NotNull QueryKey identity) {
    SourceNodesQuery query = identity.forFunctionNode(snsqMethods);
    return (query != null ? query : super.getSourceNodesQuery(identity));
  }
  private static class SNsQ implements SourceNodesQuery {
    private final int methodKey;
    public SNsQ(int methodKey) {
      this.methodKey = methodKey;
    }
    @NotNull
    public Collection<SNode> evaluate(@NotNull SourceSubstituteMacroNodesContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_1_0(ctx));
        case 1:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_1_1(ctx));
        case 2:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_10_0(ctx));
        case 3:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_12_0(ctx));
        case 4:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_13_0(ctx));
        case 5:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_13_1(ctx));
        case 6:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_18_0(ctx));
        case 7:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_27_0(ctx));
        case 8:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_27_1(ctx));
        case 9:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_27_2(ctx));
        case 10:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_27_3(ctx));
        case 11:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_27_4(ctx));
        case 12:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_27_5(ctx));
        case 13:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_27_6(ctx));
        case 14:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_27_7(ctx));
        case 15:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_27_8(ctx));
        case 16:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_27_9(ctx));
        case 17:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_27_10(ctx));
        case 18:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_27_11(ctx));
        case 19:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_27_12(ctx));
        case 20:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_27_13(ctx));
        case 21:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_27_14(ctx));
        case 22:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_27_15(ctx));
        case 23:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_27_16(ctx));
        case 24:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_27_17(ctx));
        case 25:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_27_18(ctx));
        case 26:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_27_19(ctx));
        case 27:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_27_20(ctx));
        case 28:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_27_21(ctx));
        case 29:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_27_22(ctx));
        case 30:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_27_23(ctx));
        case 31:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_27_24(ctx));
        case 32:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_27_25(ctx));
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, PropertyValueQuery> pvqMethods = new HashMap<String, PropertyValueQuery>();
  {
    int i = 0;
    pvqMethods.put("7824142728411256451", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "proj"));
    pvqMethods.put("622446679681395785", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "join"));
    pvqMethods.put("2171626095253807980", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "groupBy"));
    pvqMethods.put("2171626095253830066", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "orderBy"));
    pvqMethods.put("2171626095253857269", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "aggFunction"));
    pvqMethods.put("7495241453935559443", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("8619478032122744574", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("8619478032122821270", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("8619478032123152207", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("8619478032123164127", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("8619478032123325317", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("8619478032123339737", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("8619478032123352136", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("8619478032123360621", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("8619478032123292114", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("8619478032123306969", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("8619478032123303864", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("8619478032123266771", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("8619478032123273468", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("8619478032122627480", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("8619478032122674642", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("8619478032126684434", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("8619478032126696505", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("8619478032126724264", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("8619478032126735903", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("8619478032127837221", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "body"));
    pvqMethods.put("7495241453934133655", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("8619478032126559495", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("2340268240440328334", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("2340268240440349278", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("2340268240440379917", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("2340268240440405588", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("2340268240440433487", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("2340268240456070614", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("2340268240456083324", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("2340268240465531662", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("4448233057882855763", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("64837629270328633", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("6667543392284753108", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("6667543392283448361", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("6649776843764623290", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("6649776843764628751", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("1695491562011825485", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("2494517925624516709", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("7824142728414950044", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "select"));
    pvqMethods.put("4235273330103278577", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "window"));
    pvqMethods.put("4258597989025714651", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("6667543392294885062", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "body"));
    pvqMethods.put("4448233057883843396", new PVQ(i++, MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x3db738e392e4ce51L, 0x3db738e392e4ce52L, "body"), "data"));
    pvqMethods.put("7811275371976093834", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "map_Script"));
  }
  @NotNull
  @Override
  public PropertyValueQuery getPropertyValueQuery(@NotNull QueryKey identity) {
    PropertyValueQuery query = identity.forTemplateNode(pvqMethods);
    return (query != null ? query : super.getPropertyValueQuery(identity));
  }
  private static class PVQ extends PropertyValueQuery.Base {
    private final int methodKey;
    /*package*/ PVQ(int methodKey, SProperty property, String templateValue) {
      super(property, templateValue);
      this.methodKey = methodKey;
    }
    @Nullable
    public Object evaluate(@NotNull PropertyMacroContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.propertyMacro_GetValue_3_0(ctx);
        case 1:
          return QueriesGenerated.propertyMacro_GetValue_3_1(ctx);
        case 2:
          return QueriesGenerated.propertyMacro_GetValue_3_2(ctx);
        case 3:
          return QueriesGenerated.propertyMacro_GetValue_3_3(ctx);
        case 4:
          return QueriesGenerated.propertyMacro_GetValue_3_4(ctx);
        case 5:
          return QueriesGenerated.propertyMacro_GetValue_5_0(ctx);
        case 6:
          return QueriesGenerated.propertyMacro_GetValue_5_1(ctx);
        case 7:
          return QueriesGenerated.propertyMacro_GetValue_5_2(ctx);
        case 8:
          return QueriesGenerated.propertyMacro_GetValue_5_3(ctx);
        case 9:
          return QueriesGenerated.propertyMacro_GetValue_5_4(ctx);
        case 10:
          return QueriesGenerated.propertyMacro_GetValue_7_0(ctx);
        case 11:
          return QueriesGenerated.propertyMacro_GetValue_7_1(ctx);
        case 12:
          return QueriesGenerated.propertyMacro_GetValue_7_2(ctx);
        case 13:
          return QueriesGenerated.propertyMacro_GetValue_7_3(ctx);
        case 14:
          return QueriesGenerated.propertyMacro_GetValue_8_0(ctx);
        case 15:
          return QueriesGenerated.propertyMacro_GetValue_8_1(ctx);
        case 16:
          return QueriesGenerated.propertyMacro_GetValue_8_2(ctx);
        case 17:
          return QueriesGenerated.propertyMacro_GetValue_9_0(ctx);
        case 18:
          return QueriesGenerated.propertyMacro_GetValue_9_1(ctx);
        case 19:
          return QueriesGenerated.propertyMacro_GetValue_10_0(ctx);
        case 20:
          return QueriesGenerated.propertyMacro_GetValue_10_1(ctx);
        case 21:
          return QueriesGenerated.propertyMacro_GetValue_11_0(ctx);
        case 22:
          return QueriesGenerated.propertyMacro_GetValue_11_1(ctx);
        case 23:
          return QueriesGenerated.propertyMacro_GetValue_11_2(ctx);
        case 24:
          return QueriesGenerated.propertyMacro_GetValue_11_3(ctx);
        case 25:
          return QueriesGenerated.propertyMacro_GetValue_12_0(ctx);
        case 26:
          return QueriesGenerated.propertyMacro_GetValue_12_1(ctx);
        case 27:
          return QueriesGenerated.propertyMacro_GetValue_13_0(ctx);
        case 28:
          return QueriesGenerated.propertyMacro_GetValue_17_0(ctx);
        case 29:
          return QueriesGenerated.propertyMacro_GetValue_17_1(ctx);
        case 30:
          return QueriesGenerated.propertyMacro_GetValue_17_2(ctx);
        case 31:
          return QueriesGenerated.propertyMacro_GetValue_17_3(ctx);
        case 32:
          return QueriesGenerated.propertyMacro_GetValue_17_4(ctx);
        case 33:
          return QueriesGenerated.propertyMacro_GetValue_18_0(ctx);
        case 34:
          return QueriesGenerated.propertyMacro_GetValue_18_1(ctx);
        case 35:
          return QueriesGenerated.propertyMacro_GetValue_19_0(ctx);
        case 36:
          return QueriesGenerated.propertyMacro_GetValue_20_0(ctx);
        case 37:
          return QueriesGenerated.propertyMacro_GetValue_21_0(ctx);
        case 38:
          return QueriesGenerated.propertyMacro_GetValue_22_0(ctx);
        case 39:
          return QueriesGenerated.propertyMacro_GetValue_22_1(ctx);
        case 40:
          return QueriesGenerated.propertyMacro_GetValue_23_0(ctx);
        case 41:
          return QueriesGenerated.propertyMacro_GetValue_23_1(ctx);
        case 42:
          return QueriesGenerated.propertyMacro_GetValue_24_0(ctx);
        case 43:
          return QueriesGenerated.propertyMacro_GetValue_25_0(ctx);
        case 44:
          return QueriesGenerated.propertyMacro_GetValue_27_0(ctx);
        case 45:
          return QueriesGenerated.propertyMacro_GetValue_27_1(ctx);
        case 46:
          return QueriesGenerated.propertyMacro_GetValue_27_2(ctx);
        case 47:
          return QueriesGenerated.propertyMacro_GetValue_27_3(ctx);
        case 48:
          return QueriesGenerated.propertyMacro_GetValue_27_4(ctx);
        case 49:
          return QueriesGenerated.propertyMacro_GetValue_27_5(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, IfMacroCondition> imcMethods = new HashMap<String, IfMacroCondition>();
  {
    int i = 0;
    imcMethods.put("4235273330106004065", new IfMC(i++));
    imcMethods.put("1695491562001985885", new IfMC(i++));
    imcMethods.put("7724742800290591583", new IfMC(i++));
    imcMethods.put("1695491561994859674", new IfMC(i++));
    imcMethods.put("3336533897854433056", new IfMC(i++));
    imcMethods.put("2849352084542303354", new IfMC(i++));
    imcMethods.put("1695491561994964727", new IfMC(i++));
    imcMethods.put("7724742800288446836", new IfMC(i++));
    imcMethods.put("7724742800288500071", new IfMC(i++));
    imcMethods.put("7724742800288515014", new IfMC(i++));
    imcMethods.put("7724742800288519799", new IfMC(i++));
    imcMethods.put("7724742800288521988", new IfMC(i++));
    imcMethods.put("7824142728411261213", new IfMC(i++));
    imcMethods.put("622446679681352768", new IfMC(i++));
    imcMethods.put("2171626095253807971", new IfMC(i++));
    imcMethods.put("2171626095253830057", new IfMC(i++));
    imcMethods.put("2171626095253857260", new IfMC(i++));
    imcMethods.put("3377356068488181276", new IfMC(i++));
    imcMethods.put("2340268240441734555", new IfMC(i++));
    imcMethods.put("2942082050240078069", new IfMC(i++));
    imcMethods.put("2942082050240079464", new IfMC(i++));
    imcMethods.put("2942082050240118698", new IfMC(i++));
    imcMethods.put("2942082050240047343", new IfMC(i++));
    imcMethods.put("622446679675937640", new IfMC(i++));
    imcMethods.put("4614575099524806781", new IfMC(i++));
    imcMethods.put("2340268240457113773", new IfMC(i++));
    imcMethods.put("622446679667224271", new IfMC(i++));
    imcMethods.put("1404468460818266218", new IfMC(i++));
    imcMethods.put("1404468460818270270", new IfMC(i++));
    imcMethods.put("1404468460818272041", new IfMC(i++));
    imcMethods.put("4614575099526004739", new IfMC(i++));
    imcMethods.put("4614575099526595199", new IfMC(i++));
    imcMethods.put("3481690752606743269", new IfMC(i++));
    imcMethods.put("3481690752606743297", new IfMC(i++));
    imcMethods.put("3481690752606743324", new IfMC(i++));
    imcMethods.put("4448233057882947424", new IfMC(i++));
    imcMethods.put("4448233057883053857", new IfMC(i++));
    imcMethods.put("4448233057883150241", new IfMC(i++));
    imcMethods.put("4448233057883194269", new IfMC(i++));
    imcMethods.put("4448233057883225068", new IfMC(i++));
    imcMethods.put("4448233057883256051", new IfMC(i++));
    imcMethods.put("6649776843764527732", new IfMC(i++));
    imcMethods.put("64837629271800386", new IfMC(i++));
    imcMethods.put("6667543392294884985", new IfMC(i++));
    imcMethods.put("2494517925638549634", new IfMC(i++));
    imcMethods.put("4448233057883759548", new IfMC(i++));
    imcMethods.put("4448233057883801482", new IfMC(i++));
    imcMethods.put("4448233057883843368", new IfMC(i++));
  }
  @NotNull
  @Override
  public IfMacroCondition getIfMacroCondition(@NotNull QueryKey identity) {
    IfMacroCondition query = identity.forTemplateNode(imcMethods);
    return (query != null ? query : super.getIfMacroCondition(identity));
  }
  private static class IfMC implements IfMacroCondition {
    private final int methodKey;
    public IfMC(int methodKey) {
      this.methodKey = methodKey;
    }
    @Override
    public boolean check(@NotNull IfMacroContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.ifMacro_Condition_1_0(ctx);
        case 1:
          return QueriesGenerated.ifMacro_Condition_1_1(ctx);
        case 2:
          return QueriesGenerated.ifMacro_Condition_1_2(ctx);
        case 3:
          return QueriesGenerated.ifMacro_Condition_1_3(ctx);
        case 4:
          return QueriesGenerated.ifMacro_Condition_1_4(ctx);
        case 5:
          return QueriesGenerated.ifMacro_Condition_1_5(ctx);
        case 6:
          return QueriesGenerated.ifMacro_Condition_1_6(ctx);
        case 7:
          return QueriesGenerated.ifMacro_Condition_1_7(ctx);
        case 8:
          return QueriesGenerated.ifMacro_Condition_1_8(ctx);
        case 9:
          return QueriesGenerated.ifMacro_Condition_1_9(ctx);
        case 10:
          return QueriesGenerated.ifMacro_Condition_1_10(ctx);
        case 11:
          return QueriesGenerated.ifMacro_Condition_1_11(ctx);
        case 12:
          return QueriesGenerated.ifMacro_Condition_3_0(ctx);
        case 13:
          return QueriesGenerated.ifMacro_Condition_3_1(ctx);
        case 14:
          return QueriesGenerated.ifMacro_Condition_3_2(ctx);
        case 15:
          return QueriesGenerated.ifMacro_Condition_3_3(ctx);
        case 16:
          return QueriesGenerated.ifMacro_Condition_3_4(ctx);
        case 17:
          return QueriesGenerated.ifMacro_Condition_4_0(ctx);
        case 18:
          return QueriesGenerated.ifMacro_Condition_4_1(ctx);
        case 19:
          return QueriesGenerated.ifMacro_Condition_4_2(ctx);
        case 20:
          return QueriesGenerated.ifMacro_Condition_4_3(ctx);
        case 21:
          return QueriesGenerated.ifMacro_Condition_4_4(ctx);
        case 22:
          return QueriesGenerated.ifMacro_Condition_4_5(ctx);
        case 23:
          return QueriesGenerated.ifMacro_Condition_12_0(ctx);
        case 24:
          return QueriesGenerated.ifMacro_Condition_12_1(ctx);
        case 25:
          return QueriesGenerated.ifMacro_Condition_12_2(ctx);
        case 26:
          return QueriesGenerated.ifMacro_Condition_12_3(ctx);
        case 27:
          return QueriesGenerated.ifMacro_Condition_12_4(ctx);
        case 28:
          return QueriesGenerated.ifMacro_Condition_12_5(ctx);
        case 29:
          return QueriesGenerated.ifMacro_Condition_12_6(ctx);
        case 30:
          return QueriesGenerated.ifMacro_Condition_13_0(ctx);
        case 31:
          return QueriesGenerated.ifMacro_Condition_13_1(ctx);
        case 32:
          return QueriesGenerated.ifMacro_Condition_27_0(ctx);
        case 33:
          return QueriesGenerated.ifMacro_Condition_27_1(ctx);
        case 34:
          return QueriesGenerated.ifMacro_Condition_27_2(ctx);
        case 35:
          return QueriesGenerated.ifMacro_Condition_27_3(ctx);
        case 36:
          return QueriesGenerated.ifMacro_Condition_27_4(ctx);
        case 37:
          return QueriesGenerated.ifMacro_Condition_27_5(ctx);
        case 38:
          return QueriesGenerated.ifMacro_Condition_27_6(ctx);
        case 39:
          return QueriesGenerated.ifMacro_Condition_27_7(ctx);
        case 40:
          return QueriesGenerated.ifMacro_Condition_27_8(ctx);
        case 41:
          return QueriesGenerated.ifMacro_Condition_27_9(ctx);
        case 42:
          return QueriesGenerated.ifMacro_Condition_27_10(ctx);
        case 43:
          return QueriesGenerated.ifMacro_Condition_27_11(ctx);
        case 44:
          return QueriesGenerated.ifMacro_Condition_27_12(ctx);
        case 45:
          return QueriesGenerated.ifMacro_Condition_27_13(ctx);
        case 46:
          return QueriesGenerated.ifMacro_Condition_27_14(ctx);
        case 47:
          return QueriesGenerated.ifMacro_Condition_27_15(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no condition method for if macro %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, ReferenceTargetQuery> rtqMethods = new HashMap<String, ReferenceTargetQuery>();
  {
    rtqMethods.put("4235273330106010754", new RTQ(0, "aggFunction"));
    rtqMethods.put("1695491562001985461", new RTQ(1, "aggFunction"));
    rtqMethods.put("7724742800290638489", new RTQ(2, "aggFunction"));
    rtqMethods.put("1695491561994859056", new RTQ(3, "aggFunction"));
    rtqMethods.put("3336533897854501295", new RTQ(4, "dataSource"));
    rtqMethods.put("1695491561994973317", new RTQ(5, "dataSource"));
    rtqMethods.put("7724742800288490914", new RTQ(6, "aggFunction"));
    rtqMethods.put("7724742800288514317", new RTQ(7, "aggFunction"));
    rtqMethods.put("7724742800288515025", new RTQ(8, "aggFunction"));
    rtqMethods.put("7724742800288519810", new RTQ(9, "aggFunction"));
    rtqMethods.put("7724742800288521999", new RTQ(10, "aggFunction"));
    rtqMethods.put("7724742800300090481", new RTQ(11, "dataSource"));
    rtqMethods.put("2171626095253857286", new RTQ(12, null));
    rtqMethods.put("2942082050240056169", new RTQ(13, ""));
    rtqMethods.put("2942082050240059554", new RTQ(14, ""));
    rtqMethods.put("2942082050237369037", new RTQ(15, ""));
    rtqMethods.put("622446679693263575", new RTQ(16, ""));
    rtqMethods.put("2942082050237382372", new RTQ(17, ""));
    rtqMethods.put("622446679693465858", new RTQ(18, ""));
    rtqMethods.put("2942082050237389816", new RTQ(19, ""));
    rtqMethods.put("622446679693471349", new RTQ(20, ""));
    rtqMethods.put("2942082050237397072", new RTQ(21, ""));
    rtqMethods.put("622446679693477433", new RTQ(22, ""));
    rtqMethods.put("2942082050237408208", new RTQ(23, ""));
    rtqMethods.put("622446679693483010", new RTQ(24, ""));
    rtqMethods.put("2942082050239499213", new RTQ(25, ""));
    rtqMethods.put("2942082050239504451", new RTQ(26, ""));
    rtqMethods.put("2942082050239505185", new RTQ(27, ""));
    rtqMethods.put("2942082050239505197", new RTQ(28, ""));
    rtqMethods.put("2942082050239506918", new RTQ(29, ""));
    rtqMethods.put("2942082050239506930", new RTQ(30, ""));
    rtqMethods.put("2942082050239508373", new RTQ(31, ""));
    rtqMethods.put("2942082050239508385", new RTQ(32, ""));
    rtqMethods.put("2942082050240019035", new RTQ(33, ""));
    rtqMethods.put("2942082050240019043", new RTQ(34, ""));
    rtqMethods.put("2942082050240015291", new RTQ(35, ""));
    rtqMethods.put("2942082050240018178", new RTQ(36, ""));
    rtqMethods.put("2942082050240020845", new RTQ(37, ""));
    rtqMethods.put("2942082050240020853", new RTQ(38, ""));
    rtqMethods.put("2942082050240039348", new RTQ(39, ""));
    rtqMethods.put("2942082050240041223", new RTQ(40, ""));
    rtqMethods.put("2942082050240042481", new RTQ(41, ""));
    rtqMethods.put("2942082050240042489", new RTQ(42, ""));
    rtqMethods.put("8619478032122607165", new RTQ(43, ""));
    rtqMethods.put("622446679664943984", new RTQ(44, ""));
    rtqMethods.put("1404468460816835150", new RTQ(45, ""));
    rtqMethods.put("1404468460816837025", new RTQ(46, ""));
    rtqMethods.put("1404468460816839085", new RTQ(47, ""));
    rtqMethods.put("1404468460816839093", new RTQ(48, ""));
    rtqMethods.put("1404468460816843653", new RTQ(49, ""));
    rtqMethods.put("1404468460816843661", new RTQ(50, ""));
    rtqMethods.put("1404468460816845982", new RTQ(51, ""));
    rtqMethods.put("1404468460816845990", new RTQ(52, ""));
    rtqMethods.put("622446679667247214", new RTQ(53, ""));
    rtqMethods.put("622446679667275417", new RTQ(54, ""));
    rtqMethods.put("1404468460818272025", new RTQ(55, ""));
    rtqMethods.put("1404468460818272033", new RTQ(56, ""));
    rtqMethods.put("622446679693546648", new RTQ(57, ""));
    rtqMethods.put("4614575099524729705", new RTQ(58, ""));
    rtqMethods.put("4614575099526357896", new RTQ(59, ""));
    rtqMethods.put("4614575099526387678", new RTQ(60, ""));
    rtqMethods.put("4614575099526489069", new RTQ(61, ""));
    rtqMethods.put("4614575099526494714", new RTQ(62, ""));
    rtqMethods.put("4614575099526568366", new RTQ(63, ""));
    rtqMethods.put("4614575099526580588", new RTQ(64, ""));
    rtqMethods.put("4614575099530246914", new RTQ(65, null));
    rtqMethods.put("4614575099530247920", new RTQ(66, null));
    rtqMethods.put("4614575099530248522", new RTQ(67, null));
    rtqMethods.put("4614575099530248608", new RTQ(68, null));
    rtqMethods.put("4614575099530248976", new RTQ(69, null));
    rtqMethods.put("2340268240440328216", new RTQ(70, ""));
    rtqMethods.put("2340268240440328238", new RTQ(71, ""));
    rtqMethods.put("2340268240440349175", new RTQ(72, ""));
    rtqMethods.put("2340268240440349183", new RTQ(73, ""));
    rtqMethods.put("2340268240440379814", new RTQ(74, ""));
    rtqMethods.put("2340268240440379822", new RTQ(75, ""));
    rtqMethods.put("2340268240440405484", new RTQ(76, ""));
    rtqMethods.put("2340268240440405492", new RTQ(77, ""));
    rtqMethods.put("2340268240440433384", new RTQ(78, ""));
    rtqMethods.put("2340268240440433392", new RTQ(79, ""));
    rtqMethods.put("2340268240456070549", new RTQ(80, ""));
    rtqMethods.put("2340268240456091942", new RTQ(81, ""));
    rtqMethods.put("2340268240456083315", new RTQ(82, ""));
    rtqMethods.put("2340268240456191246", new RTQ(83, ""));
    rtqMethods.put("2340268240465521726", new RTQ(84, ""));
    rtqMethods.put("4448233057882847939", new RTQ(85, ""));
    rtqMethods.put("64837629270328617", new RTQ(86, ""));
    rtqMethods.put("64837629270328640", new RTQ(87, ""));
    rtqMethods.put("6667543392284752979", new RTQ(88, ""));
    rtqMethods.put("6667543392284753024", new RTQ(89, ""));
    rtqMethods.put("6667543392283445837", new RTQ(90, ""));
    rtqMethods.put("6667543392283446950", new RTQ(91, ""));
    rtqMethods.put("6649776843764623327", new RTQ(92, ""));
    rtqMethods.put("1695491562006047258", new RTQ(93, ""));
    rtqMethods.put("6649776843764628824", new RTQ(94, ""));
    rtqMethods.put("1695491562006095207", new RTQ(95, ""));
    rtqMethods.put("1695491562011825496", new RTQ(96, ""));
    rtqMethods.put("1695491562011825534", new RTQ(97, ""));
    rtqMethods.put("2494517925624516724", new RTQ(98, ""));
    rtqMethods.put("2494517925624516736", new RTQ(99, ""));
    rtqMethods.put("4448233057883256078", new RTQ(100, ""));
    rtqMethods.put("4448233057883256086", new RTQ(101, ""));
    rtqMethods.put("6667543392294885034", new RTQ(102, ""));
    rtqMethods.put("6667543392294885046", new RTQ(103, ""));
    rtqMethods.put("4448233057883843352", new RTQ(104, ""));
    rtqMethods.put("4448233057883843360", new RTQ(105, ""));
  }
  @NotNull
  @Override
  public ReferenceTargetQuery getReferenceTargetQuery(@NotNull QueryKey queryKey) {
    ReferenceTargetQuery query = queryKey.forTemplateNode(rtqMethods);
    return (query != null ? query : super.getReferenceTargetQuery(queryKey));
  }
  private static class RTQ extends ReferenceTargetQuery.Base {
    private final int methodKey;
    /*package*/ RTQ(int methodKey, String templateValue) {
      super(templateValue);
      this.methodKey = methodKey;
    }
    @Nullable
    public Object evaluate(@NotNull ReferenceMacroContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.referenceMacro_GetReferent_1_0(ctx);
        case 1:
          return QueriesGenerated.referenceMacro_GetReferent_1_1(ctx);
        case 2:
          return QueriesGenerated.referenceMacro_GetReferent_1_2(ctx);
        case 3:
          return QueriesGenerated.referenceMacro_GetReferent_1_3(ctx);
        case 4:
          return QueriesGenerated.referenceMacro_GetReferent_1_4(ctx);
        case 5:
          return QueriesGenerated.referenceMacro_GetReferent_1_5(ctx);
        case 6:
          return QueriesGenerated.referenceMacro_GetReferent_1_6(ctx);
        case 7:
          return QueriesGenerated.referenceMacro_GetReferent_1_7(ctx);
        case 8:
          return QueriesGenerated.referenceMacro_GetReferent_1_8(ctx);
        case 9:
          return QueriesGenerated.referenceMacro_GetReferent_1_9(ctx);
        case 10:
          return QueriesGenerated.referenceMacro_GetReferent_1_10(ctx);
        case 11:
          return QueriesGenerated.referenceMacro_GetReferent_2_0(ctx);
        case 12:
          return QueriesGenerated.referenceMacro_GetReferent_3_0(ctx);
        case 13:
          return QueriesGenerated.referenceMacro_GetReferent_4_0(ctx);
        case 14:
          return QueriesGenerated.referenceMacro_GetReferent_4_1(ctx);
        case 15:
          return QueriesGenerated.referenceMacro_GetReferent_5_0(ctx);
        case 16:
          return QueriesGenerated.referenceMacro_GetReferent_5_1(ctx);
        case 17:
          return QueriesGenerated.referenceMacro_GetReferent_5_2(ctx);
        case 18:
          return QueriesGenerated.referenceMacro_GetReferent_5_3(ctx);
        case 19:
          return QueriesGenerated.referenceMacro_GetReferent_5_4(ctx);
        case 20:
          return QueriesGenerated.referenceMacro_GetReferent_5_5(ctx);
        case 21:
          return QueriesGenerated.referenceMacro_GetReferent_5_6(ctx);
        case 22:
          return QueriesGenerated.referenceMacro_GetReferent_5_7(ctx);
        case 23:
          return QueriesGenerated.referenceMacro_GetReferent_5_8(ctx);
        case 24:
          return QueriesGenerated.referenceMacro_GetReferent_5_9(ctx);
        case 25:
          return QueriesGenerated.referenceMacro_GetReferent_7_0(ctx);
        case 26:
          return QueriesGenerated.referenceMacro_GetReferent_7_1(ctx);
        case 27:
          return QueriesGenerated.referenceMacro_GetReferent_7_2(ctx);
        case 28:
          return QueriesGenerated.referenceMacro_GetReferent_7_3(ctx);
        case 29:
          return QueriesGenerated.referenceMacro_GetReferent_7_4(ctx);
        case 30:
          return QueriesGenerated.referenceMacro_GetReferent_7_5(ctx);
        case 31:
          return QueriesGenerated.referenceMacro_GetReferent_7_6(ctx);
        case 32:
          return QueriesGenerated.referenceMacro_GetReferent_7_7(ctx);
        case 33:
          return QueriesGenerated.referenceMacro_GetReferent_8_0(ctx);
        case 34:
          return QueriesGenerated.referenceMacro_GetReferent_8_1(ctx);
        case 35:
          return QueriesGenerated.referenceMacro_GetReferent_8_2(ctx);
        case 36:
          return QueriesGenerated.referenceMacro_GetReferent_8_3(ctx);
        case 37:
          return QueriesGenerated.referenceMacro_GetReferent_8_4(ctx);
        case 38:
          return QueriesGenerated.referenceMacro_GetReferent_8_5(ctx);
        case 39:
          return QueriesGenerated.referenceMacro_GetReferent_9_0(ctx);
        case 40:
          return QueriesGenerated.referenceMacro_GetReferent_9_1(ctx);
        case 41:
          return QueriesGenerated.referenceMacro_GetReferent_9_2(ctx);
        case 42:
          return QueriesGenerated.referenceMacro_GetReferent_9_3(ctx);
        case 43:
          return QueriesGenerated.referenceMacro_GetReferent_10_0(ctx);
        case 44:
          return QueriesGenerated.referenceMacro_GetReferent_10_1(ctx);
        case 45:
          return QueriesGenerated.referenceMacro_GetReferent_11_0(ctx);
        case 46:
          return QueriesGenerated.referenceMacro_GetReferent_11_1(ctx);
        case 47:
          return QueriesGenerated.referenceMacro_GetReferent_11_2(ctx);
        case 48:
          return QueriesGenerated.referenceMacro_GetReferent_11_3(ctx);
        case 49:
          return QueriesGenerated.referenceMacro_GetReferent_11_4(ctx);
        case 50:
          return QueriesGenerated.referenceMacro_GetReferent_11_5(ctx);
        case 51:
          return QueriesGenerated.referenceMacro_GetReferent_11_6(ctx);
        case 52:
          return QueriesGenerated.referenceMacro_GetReferent_11_7(ctx);
        case 53:
          return QueriesGenerated.referenceMacro_GetReferent_12_0(ctx);
        case 54:
          return QueriesGenerated.referenceMacro_GetReferent_12_1(ctx);
        case 55:
          return QueriesGenerated.referenceMacro_GetReferent_12_2(ctx);
        case 56:
          return QueriesGenerated.referenceMacro_GetReferent_12_3(ctx);
        case 57:
          return QueriesGenerated.referenceMacro_GetReferent_13_0(ctx);
        case 58:
          return QueriesGenerated.referenceMacro_GetReferent_13_1(ctx);
        case 59:
          return QueriesGenerated.referenceMacro_GetReferent_13_2(ctx);
        case 60:
          return QueriesGenerated.referenceMacro_GetReferent_13_3(ctx);
        case 61:
          return QueriesGenerated.referenceMacro_GetReferent_14_0(ctx);
        case 62:
          return QueriesGenerated.referenceMacro_GetReferent_14_1(ctx);
        case 63:
          return QueriesGenerated.referenceMacro_GetReferent_14_2(ctx);
        case 64:
          return QueriesGenerated.referenceMacro_GetReferent_14_3(ctx);
        case 65:
          return QueriesGenerated.referenceMacro_GetReferent_15_0(ctx);
        case 66:
          return QueriesGenerated.referenceMacro_GetReferent_15_1(ctx);
        case 67:
          return QueriesGenerated.referenceMacro_GetReferent_15_2(ctx);
        case 68:
          return QueriesGenerated.referenceMacro_GetReferent_15_3(ctx);
        case 69:
          return QueriesGenerated.referenceMacro_GetReferent_15_4(ctx);
        case 70:
          return QueriesGenerated.referenceMacro_GetReferent_17_0(ctx);
        case 71:
          return QueriesGenerated.referenceMacro_GetReferent_17_1(ctx);
        case 72:
          return QueriesGenerated.referenceMacro_GetReferent_17_2(ctx);
        case 73:
          return QueriesGenerated.referenceMacro_GetReferent_17_3(ctx);
        case 74:
          return QueriesGenerated.referenceMacro_GetReferent_17_4(ctx);
        case 75:
          return QueriesGenerated.referenceMacro_GetReferent_17_5(ctx);
        case 76:
          return QueriesGenerated.referenceMacro_GetReferent_17_6(ctx);
        case 77:
          return QueriesGenerated.referenceMacro_GetReferent_17_7(ctx);
        case 78:
          return QueriesGenerated.referenceMacro_GetReferent_17_8(ctx);
        case 79:
          return QueriesGenerated.referenceMacro_GetReferent_17_9(ctx);
        case 80:
          return QueriesGenerated.referenceMacro_GetReferent_18_0(ctx);
        case 81:
          return QueriesGenerated.referenceMacro_GetReferent_18_1(ctx);
        case 82:
          return QueriesGenerated.referenceMacro_GetReferent_18_2(ctx);
        case 83:
          return QueriesGenerated.referenceMacro_GetReferent_18_3(ctx);
        case 84:
          return QueriesGenerated.referenceMacro_GetReferent_19_0(ctx);
        case 85:
          return QueriesGenerated.referenceMacro_GetReferent_20_0(ctx);
        case 86:
          return QueriesGenerated.referenceMacro_GetReferent_21_0(ctx);
        case 87:
          return QueriesGenerated.referenceMacro_GetReferent_21_1(ctx);
        case 88:
          return QueriesGenerated.referenceMacro_GetReferent_22_0(ctx);
        case 89:
          return QueriesGenerated.referenceMacro_GetReferent_22_1(ctx);
        case 90:
          return QueriesGenerated.referenceMacro_GetReferent_22_2(ctx);
        case 91:
          return QueriesGenerated.referenceMacro_GetReferent_22_3(ctx);
        case 92:
          return QueriesGenerated.referenceMacro_GetReferent_23_0(ctx);
        case 93:
          return QueriesGenerated.referenceMacro_GetReferent_23_1(ctx);
        case 94:
          return QueriesGenerated.referenceMacro_GetReferent_23_2(ctx);
        case 95:
          return QueriesGenerated.referenceMacro_GetReferent_23_3(ctx);
        case 96:
          return QueriesGenerated.referenceMacro_GetReferent_24_0(ctx);
        case 97:
          return QueriesGenerated.referenceMacro_GetReferent_24_1(ctx);
        case 98:
          return QueriesGenerated.referenceMacro_GetReferent_25_0(ctx);
        case 99:
          return QueriesGenerated.referenceMacro_GetReferent_25_1(ctx);
        case 100:
          return QueriesGenerated.referenceMacro_GetReferent_27_0(ctx);
        case 101:
          return QueriesGenerated.referenceMacro_GetReferent_27_1(ctx);
        case 102:
          return QueriesGenerated.referenceMacro_GetReferent_27_2(ctx);
        case 103:
          return QueriesGenerated.referenceMacro_GetReferent_27_3(ctx);
        case 104:
          return QueriesGenerated.referenceMacro_GetReferent_27_4(ctx);
        case 105:
          return QueriesGenerated.referenceMacro_GetReferent_27_5(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, VariableValueQuery> vvqMethods = new HashMap<String, VariableValueQuery>();
  {
    vvqMethods.put("9181267657116097245", new VVQ(0));
    vvqMethods.put("2340268240438465018", new VVQ(1));
  }
  @NotNull
  @Override
  public VariableValueQuery getVariableValueQuery(@NotNull QueryKey queryKey) {
    VariableValueQuery query = queryKey.forTemplateNode(vvqMethods);
    return (query != null ? query : super.getVariableValueQuery(queryKey));
  }
  private static class VVQ implements VariableValueQuery {
    private final int methodKey;
    /*package*/ VVQ(int methodKey) {
      this.methodKey = methodKey;
    }
    @Nullable
    public Object evaluate(@NotNull TemplateVarContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.varMacro_Value_27_0(ctx);
        case 1:
          return QueriesGenerated.varMacro_Value_27_1(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private Map<String, LabelInputQuery> liqMethods = new HashMap<String, LabelInputQuery>();
  {
    liqMethods.put("6649776843770342380", new LIQ(0));
  }
  @NotNull
  @Override
  public LabelInputQuery getLabelInputQuery(@NotNull QueryKey key) {
    LabelInputQuery query = key.forFunctionNode(liqMethods);
    return (query != null ? query : super.getLabelInputQuery(key));
  }
  private static class LIQ implements LabelInputQuery {
    private final int methodKey;
    private LIQ(int key) {
      methodKey = key;
    }
    @Nullable
    @Override
    public Object evaluate(@NotNull LabelKeyQueryContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.labelMapNode1_0(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x5d7e70837b028394L), MetaIdFactory.conceptId(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x5d7e70837b028392L), MetaIdFactory.conceptId(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x5d7e70837b028390L), MetaIdFactory.conceptId(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x5d7e70837b02838dL), MetaIdFactory.conceptId(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x5d7e70837b028393L)).seal();
  private static final ConceptSwitchIndex conceptIndex1 = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x5d7e70837b028394L), MetaIdFactory.conceptId(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x5d7e70837b028392L), MetaIdFactory.conceptId(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x5d7e70837b028390L), MetaIdFactory.conceptId(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x5d7e70837b02838dL), MetaIdFactory.conceptId(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x5d7e70837b028393L)).seal();
  private static final EnumerationLiteralsIndex enumSwitchIndex = EnumerationLiteralsIndex.build(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x8073cf9a51b7603L, 0x8073cf9a51f0666L, 0x8073cf9a51e1edbL, 0x8073cf9a51b7608L, 0x8073cf9a51b7605L, 0x8073cf9a51b7611L, 0x8073cf9a51b760cL);

  private static final class LINKS {
    /*package*/ static final SContainmentLink where$e1s0 = MetaAdapterFactory.getContainmentLink(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x619ceb902420e379L, 0x11100ee73745172dL, "where");
    /*package*/ static final SContainmentLink condition$d94q = MetaAdapterFactory.getContainmentLink(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x619ceb902420e37bL, 0x11100ee7374a23b4L, "condition");
    /*package*/ static final SContainmentLink cols$kMcM = MetaAdapterFactory.getContainmentLink(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x619ceb902420e379L, 0xe8aecd6b255930cL, "cols");
    /*package*/ static final SContainmentLink groupBy$vhgB = MetaAdapterFactory.getContainmentLink(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x619ceb902420e379L, 0x2b087ec3aa6a1779L, "groupBy");
    /*package*/ static final SContainmentLink orderBy$K96v = MetaAdapterFactory.getContainmentLink(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x619ceb902420e379L, 0x2b087ec3aa61e429L, "orderBy");
    /*package*/ static final SContainmentLink aggregationFunction$8ryB = MetaAdapterFactory.getContainmentLink(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0xe8aecd6b2519712L, 0xb59df187aaa4b3dL, "aggregationFunction");
    /*package*/ static final SReferenceLink column$Wyeu = MetaAdapterFactory.getReferenceLink(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x11100ee7375157f4L, 0x11100ee7375157f5L, "column");
    /*package*/ static final SContainmentLink columns$JBv$ = MetaAdapterFactory.getContainmentLink(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x2b087ec3aa6a16ceL, 0x2b087ec3aa6a1759L, "columns");
    /*package*/ static final SContainmentLink columns$Hhkv = MetaAdapterFactory.getContainmentLink(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x2b087ec3aa61e251L, 0x2b087ec3aa6a16cfL, "columns");
    /*package*/ static final SContainmentLink tables$IXdn = MetaAdapterFactory.getContainmentLink(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x619ceb902420e379L, 0x207f13a8b54616bfL, "tables");
    /*package*/ static final SContainmentLink joinCondition$rc3m = MetaAdapterFactory.getContainmentLink(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x619ceb902420e379L, 0x6c94f05b7ec9d072L, "joinCondition");
    /*package*/ static final SContainmentLink leftColumn$NKe0 = MetaAdapterFactory.getContainmentLink(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x6c94f05b7ec9d046L, 0x6c94f05b7ec9d049L, "leftColumn");
    /*package*/ static final SContainmentLink rightColumn$NKG2 = MetaAdapterFactory.getContainmentLink(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x6c94f05b7ec9d046L, 0x6c94f05b7ec9d04bL, "rightColumn");
    /*package*/ static final SContainmentLink column$Aee5 = MetaAdapterFactory.getContainmentLink(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x5eeb1b6c0699ea18L, 0x5eeb1b6c0699ea2bL, "column");
    /*package*/ static final SContainmentLink conditionDx$A_03 = MetaAdapterFactory.getContainmentLink(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x5eeb1b6c0699ea1bL, 0x5eeb1b6c0699ea4dL, "conditionDx");
    /*package*/ static final SContainmentLink window$XLAN = MetaAdapterFactory.getContainmentLink(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x619ceb902420e379L, 0x30956af9a8a0e8b6L, "window");
    /*package*/ static final SReferenceLink tableRef$boeY = MetaAdapterFactory.getReferenceLink(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x207f13a8b545f6deL, 0x207f13a8b545f6dfL, "tableRef");
    /*package*/ static final SContainmentLink aggregateFunction$GMhu = MetaAdapterFactory.getContainmentLink(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x619ceb902420e379L, 0x5d7e70837b028396L, "aggregateFunction");
    /*package*/ static final SContainmentLink operations$az69 = MetaAdapterFactory.getContainmentLink(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x11100ee737443bcdL, 0x2b087ec3aa655166L, "operations");
    /*package*/ static final SContainmentLink viewTable$4dXf = MetaAdapterFactory.getContainmentLink(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x619ceb902420e379L, 0xb59df187aa1e081L, "viewTable");
    /*package*/ static final SContainmentLink value$Ad30 = MetaAdapterFactory.getContainmentLink(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x5eeb1b6c0699ea18L, 0x5eeb1b6c0699ea26L, "value");
    /*package*/ static final SReferenceLink behavior$QgnL = MetaAdapterFactory.getReferenceLink(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x35a5eccbf2f23364L, 0x13974e2681516c72L, "behavior");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept AllColumns$eP = MetaAdapterFactory.getConcept(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0xe8aecd6b2519713L, "QueryLanguage.structure.AllColumns");
    /*package*/ static final SConcept Average$3J = MetaAdapterFactory.getConcept(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x5d7e70837b028394L, "QueryLanguage.structure.Average");
    /*package*/ static final SConcept Min$Qb = MetaAdapterFactory.getConcept(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x5d7e70837b02838dL, "QueryLanguage.structure.Min");
    /*package*/ static final SConcept Max$1N = MetaAdapterFactory.getConcept(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x5d7e70837b028390L, "QueryLanguage.structure.Max");
    /*package*/ static final SConcept Count$2L = MetaAdapterFactory.getConcept(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x5d7e70837b028392L, "QueryLanguage.structure.Count");
    /*package*/ static final SConcept Sum$3g = MetaAdapterFactory.getConcept(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x5d7e70837b028393L, "QueryLanguage.structure.Sum");
    /*package*/ static final SConcept ColumnRef$XM = MetaAdapterFactory.getConcept(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x11100ee7375157f4L, "QueryLanguage.structure.ColumnRef");
    /*package*/ static final SConcept SimpleCondition$89 = MetaAdapterFactory.getConcept(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x5eeb1b6c0699ea18L, "QueryLanguage.structure.SimpleCondition");
    /*package*/ static final SConcept CreateTable$ca = MetaAdapterFactory.getConcept(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x11100ee737443b2eL, "QueryLanguage.structure.CreateTable");
    /*package*/ static final SConcept MultipleCondition$9A = MetaAdapterFactory.getConcept(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x5eeb1b6c0699ea1bL, "QueryLanguage.structure.MultipleCondition");
    /*package*/ static final SConcept Select$Te = MetaAdapterFactory.getConcept(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x619ceb902420e379L, "QueryLanguage.structure.Select");
    /*package*/ static final SConcept Script$Rg = MetaAdapterFactory.getConcept(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x11100ee737443bcdL, "QueryLanguage.structure.Script");
    /*package*/ static final SConcept Window$_o = MetaAdapterFactory.getConcept(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x30956af9a8a0e8abL, "QueryLanguage.structure.Window");
    /*package*/ static final SConcept CreateActor$Uv = MetaAdapterFactory.getConcept(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x35a5eccbf2f23364L, "ActorLanguage.structure.CreateActor");
  }

  private static final class PROPS {
    /*package*/ static final SProperty textualCondition$n5ly = MetaAdapterFactory.getProperty(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x5eeb1b6c0699ea17L, 0x680472640f9c3430L, "textualCondition");
    /*package*/ static final SProperty name$MnvL = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
    /*package*/ static final SProperty fullName$t1KL = MetaAdapterFactory.getProperty(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x11100ee737443b33L, 0x207f13a8b5691efbL, "fullName");
    /*package*/ static final SProperty size$SW_U = MetaAdapterFactory.getProperty(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x30956af9a8a0e8abL, 0x30956af9a8a0e8b3L, "size");
    /*package*/ static final SProperty value$RF4w = MetaAdapterFactory.getProperty(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x625a3ba00f1cc88bL, 0x625a3ba00f1cc88eL, "value");
    /*package*/ static final SProperty operator$A7DD = MetaAdapterFactory.getProperty(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x5eeb1b6c0699ea18L, 0x5eeb1b6c0699ea24L, "operator");
    /*package*/ static final SProperty temporalUnit$aopO = MetaAdapterFactory.getProperty(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x30956af9a8a0e8abL, 0x8073cf9a51b7617L, "temporalUnit");
    /*package*/ static final SProperty address$DqJ_ = MetaAdapterFactory.getProperty(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x35a5eccbf2f23364L, 0x13974e2681512c34L, "address");
  }
}
